<?xml version="1.0" encoding="UTF-8" ?>
<project name="SqlServer" id="Project_1b69" database="SqlServer" >
	<schema name="dbo" catalogname="Busche ToolList" >
		<table name="ActiveToolLists" row_count="0" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="PartNumber" type="nvarchar" length="50" decimal="0" jt="12" mandatory="y" />
			<column name="Description" type="nvarchar" length="50" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="EdonLocation" row_count="121" >
			<column name="item_no" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Location" type="varchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="INVENT" row_count="15007" >
			<column name="ItemNumber" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="ItemClass" type="varchar" length="15" decimal="0" jt="12" />
			<column name="UDFGLOBALTOOL" type="varchar" length="20" decimal="0" jt="12" />
		</table>
		<table name="NotifyMe" row_count="3" >
			<column name="ToolListUser" type="char" length="50" decimal="0" jt="1" mandatory="y" />
			<column name="DeptMgrApprovalNeeded" type="bit" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="BuyerApprovalNeeded" type="bit" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<column name="BuyerCompleted" type="bit" length="1" decimal="0" jt="-7" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
		</table>
		<table name="PlexMasterToolList" row_count="502" >
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Drawing_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Revision" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Extra_Description" type="varchar" length="200" decimal="0" jt="12" />
			<column name="Tool_Type" type="varchar" length="20" decimal="0" jt="12" />
			<column name="Tool_Group" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Tool_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Grade" type="varchar" length="40" decimal="0" jt="12" />
			<column name="Storage_Location" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Min_Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="Tool_Life" type="int" length="10" decimal="0" jt="4" />
			<column name="Reworked_Tool_Life" type="int" length="10" decimal="0" jt="4" />
			<column name="Std_Reworks" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Action" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Serialize" type="int" length="10" decimal="0" jt="4" />
			<column name="Purchasing_Description" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Tool_Product_Line" type="varchar" length="10" decimal="0" jt="12" />
			<column name="Source" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Replenish_Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="Supplier_Code" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Price" type="decimal" length="18" decimal="4" jt="3" />
			<column name="Accounting_Job_No" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Customer_Code" type="varchar" length="35" decimal="0" jt="12" />
			<column name="Max_Recuts" type="int" length="10" decimal="0" jt="4" />
			<column name="Recut_Length" type="decimal" length="9" decimal="3" jt="3" />
			<column name="Recut_Unit" type="varchar" length="20" decimal="0" jt="12" />
			<column name="Auto_Pick" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Storage_Section" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Row" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Rack" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Rack_Side" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Position" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Dimensions" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Weight" type="int" length="10" decimal="0" jt="4" />
			<column name="Output_Per_Cycle" type="int" length="10" decimal="0" jt="4" />
			<column name="Design_Cycle_Time" type="int" length="10" decimal="0" jt="4" />
			<column name="Press_Size" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Data_Date" type="datetime" length="23" decimal="3" jt="92" />
		</table>
		<table name="PlexMasterToolListBak" row_count="321" >
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Drawing_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Revision" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Extra_Description" type="varchar" length="200" decimal="0" jt="12" />
			<column name="Tool_Type" type="varchar" length="20" decimal="0" jt="12" />
			<column name="Tool_Group" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Tool_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Grade" type="varchar" length="40" decimal="0" jt="12" />
			<column name="Storage_Location" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Min_Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="Tool_Life" type="int" length="10" decimal="0" jt="4" />
			<column name="Reworked_Tool_Life" type="int" length="10" decimal="0" jt="4" />
			<column name="Std_Reworks" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Action" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Serialize" type="int" length="10" decimal="0" jt="4" />
			<column name="Purchasing_Description" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Tool_Product_Line" type="varchar" length="10" decimal="0" jt="12" />
			<column name="Source" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Replenish_Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="Supplier_Code" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Price" type="decimal" length="18" decimal="4" jt="3" />
			<column name="Accounting_Job_No" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Customer_Code" type="varchar" length="35" decimal="0" jt="12" />
			<column name="Max_Recuts" type="int" length="10" decimal="0" jt="4" />
			<column name="Recut_Length" type="decimal" length="9" decimal="3" jt="3" />
			<column name="Recut_Unit" type="varchar" length="20" decimal="0" jt="12" />
			<column name="Auto_Pick" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Storage_Section" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Row" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Rack" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Rack_Side" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Storage_Position" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Dimensions" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Weight" type="int" length="10" decimal="0" jt="4" />
			<column name="Output_Per_Cycle" type="int" length="10" decimal="0" jt="4" />
			<column name="Design_Cycle_Time" type="int" length="10" decimal="0" jt="4" />
			<column name="Press_Size" type="varchar" length="25" decimal="0" jt="12" />
			<column name="Data_Date" type="datetime" length="23" decimal="3" jt="92" />
		</table>
		<table name="PlexToolBOM" row_count="194" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOM0910" row_count="1083" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOM0910B" row_count="1173" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOM1023" row_count="1208" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOMAvilla" row_count="1291" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOMPlant6" row_count="4" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOMPlant6_6K_Knuckles_Horz" row_count="76" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolBOMPlant8" row_count="57" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Qty" type="int" length="10" decimal="0" jt="4" />
			<column name="Matched_Set" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Station" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Optional" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Workcenter" type="varchar" length="5" decimal="0" jt="12" />
			<column name="Sort_Order" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="PlexToolListAssembly" row_count="9" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplate" row_count="53" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplate0910" row_count="367" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplateAvilla" row_count="359" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplatePlant6" row_count="4" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplatePlant6_6K_Knuckles_Wip" row_count="18" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplatePlant8" row_count="20" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="PlexToolListAssemblyTemplatePlant9" row_count="8" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Tool_Assembly_Type" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation" type="varchar" length="30" decimal="0" jt="12" />
			<column name="Tool_Assembly_Status" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Include_In_Analysis" type="smallint" length="5" decimal="0" jt="5" />
			<column name="Analysis_Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Note" type="varchar" length="500" decimal="0" jt="12" />
			<column name="Location" type="varchar" length="5" decimal="0" jt="12" />
		</table>
		<table name="Plex_PN_Op_Map_Edon" row_count="30" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="PlxPartNumber" row_count="814" >
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
		</table>
		<table name="TL_Plex_PN_Map" row_count="23" >
			<column name="TL_Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" />
		</table>
		<table name="TL_Plex_PN_Op_Map" row_count="30" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TL_Plex_PN_Op_Map_Albion" row_count="1" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="TL_Part_No" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plex_Part_No" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="15" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TL_Plex_PN_Op_Map_Avilla" row_count="27" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="TL_Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TL_Plex_PN_Op_Map_Plant6" row_count="1" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="TL_Part_No" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plex_Part_No" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="16" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TL_Plex_PN_Op_Map_Plant8" row_count="1" >
			<column name="OriginalProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="TL_Part_No" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plex_Part_key" type="int" length="10" decimal="0" jt="4" />
			<column name="Plex_Part_Operation_key" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TL_Plex_PN_Op_Map_Plant9" row_count="1" >
			<column name="OriginalProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="TL_Part_No" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plex_Part_key" type="int" length="10" decimal="0" jt="4" />
			<column name="Plex_Part_Operation_key" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="Plex_Part_No" type="varchar" length="100" decimal="0" jt="12" mandatory="y" />
			<column name="Revision" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" mandatory="y" />
		</table>
		<table name="TestImage" row_count="0" >
			<column name="Image" type="image" length="2147483647" decimal="0" jt="-4" />
		</table>
		<table name="ToolBoss" row_count="1" >
			<column name="PLANT" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="DBLOCATION" type="char" length="100" decimal="0" jt="1" mandatory="y" />
		</table>
		<table name="ToolList Change Action Text" row_count="14" >
			<column name="ActionItemNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="ActionItemText" type="nvarchar" length="250" decimal="0" jt="12" />
		</table>
		<table name="ToolList Change Actions" row_count="38907" >
			<column name="ActionID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ItemChangeID" type="int" length="10" decimal="0" jt="4" />
			<column name="ProcessChangeID" type="int" length="10" decimal="0" jt="4" />
			<column name="ActionItem" type="int" length="10" decimal="0" jt="4" />
			<column name="Complete" type="bit" length="1" decimal="0" jt="-7" />
		</table>
		<table name="ToolList Change Disposition" row_count="3" >
			<column name="DispMethods" type="char" length="25" decimal="0" jt="1" />
		</table>
		<table name="ToolList Change Items" row_count="28137" >
			<column name="ItemChangeID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessChangeID" type="int" length="10" decimal="0" jt="4" />
			<column name="Type" type="char" length="20" decimal="0" jt="1" />
			<column name="CribmasterID" type="char" length="20" decimal="0" jt="1" />
			<column name="NewStatus" type="char" length="50" decimal="0" jt="1" />
			<column name="NewPlants" type="char" length="20" decimal="0" jt="1" />
			<column name="OldPlants" type="char" length="20" decimal="0" jt="1" />
			<column name="NewVolume" type="int" length="10" decimal="0" jt="4" />
			<column name="OldVolume" type="int" length="10" decimal="0" jt="4" />
			<column name="DispositionMethod" type="char" length="20" decimal="0" jt="1" />
			<column name="Comments" type="nvarchar" length="100" decimal="0" jt="12" />
			<column name="Completed" type="bit" length="1" decimal="0" jt="-7" />
			<column name="Approved" type="bit" length="1" decimal="0" jt="-7" />
		</table>
		<table name="ToolList Change Master" row_count="9999" >
			<column name="ProcessChangeID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="Complete" type="bit" length="1" decimal="0" jt="-7" />
			<column name="Comments" type="nvarchar" length="250" decimal="0" jt="12" />
			<column name="Engineer" type="text" length="2147483647" decimal="0" jt="-1" />
			<column name="DateInitiated" type="datetime" length="23" decimal="3" jt="92" />
			<column name="DateComplete" type="datetime" length="23" decimal="3" jt="92" />
			<column name="Approved" type="bit" length="1" decimal="0" jt="-7" />
			<column name="InitialRelease" type="bit" length="1" decimal="0" jt="-7" />
			<column name="OldProcessID" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="ToolList Email" row_count="1" >
			<column name="Manager" type="char" length="50" decimal="0" jt="1" />
			<column name="Buyer" type="char" length="50" decimal="0" jt="1" />
			<column name="Engineer1" type="char" length="50" decimal="0" jt="1" />
			<column name="Engineer2" type="char" length="70" decimal="0" jt="1" />
			<column name="Engineer3" type="char" length="70" decimal="0" jt="1" />
			<column name="Engineer4" type="char" length="70" decimal="0" jt="1" />
		</table>
		<table name="ToolList Fixture" row_count="2229" >
			<column name="ItemID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="Manufacturer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolType" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolDescription" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="AdditionalNotes" type="nvarchar" length="150" decimal="0" jt="12" />
			<column name="Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="CribToolID" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="DetailNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolbossStock" type="bit" length="1" decimal="0" jt="-7" />
		</table>
		<table name="ToolList Item" row_count="45564" >
			<column name="ItemID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolType" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolDescription" type="nvarchar" length="75" decimal="0" jt="12" />
			<column name="Manufacturer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Consumable" type="bit" length="1" decimal="0" jt="-7" />
			<column name="QuantityPerCuttingEdge" type="int" length="10" decimal="0" jt="4" />
			<column name="AdditionalNotes" type="nvarchar" length="150" decimal="0" jt="12" />
			<column name="NumberofCuttingEdges" type="int" length="10" decimal="0" jt="4" />
			<column name="Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="CribToolID" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Regrindable" type="bit" length="1" decimal="0" jt="-7" />
			<column name="QtyPerRegrind" type="int" length="10" decimal="0" jt="4" />
			<column name="NumOfRegrinds" type="int" length="10" decimal="0" jt="4" />
			<column name="ParentItem" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolbossStock" type="bit" length="1" decimal="0" jt="-7" />
			<column name="ItemImage" type="image" length="2147483647" decimal="0" jt="-4" />
		</table>
		<table name="ToolList Master" row_count="1064" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="PartFamily" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="OperationNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="OperationDescription" type="nvarchar" length="250" decimal="0" jt="12" />
			<column name="Obsolete" type="bit" length="1" decimal="0" jt="-7" />
			<column name="Customer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="AnnualVolume" type="int" length="10" decimal="0" jt="4" />
			<column name="Released" type="bit" length="1" decimal="0" jt="-7" />
			<column name="MultiTurret" type="bit" length="1" decimal="0" jt="-7" />
			<column name="RevOfProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="RevInProcess" type="bit" length="1" decimal="0" jt="-7" />
			<column name="OriginalProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="FixtureDrawing" type="char" length="100" decimal="0" jt="1" />
		</table>
		<table name="ToolList Misc" row_count="554" >
			<column name="ItemID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="Manufacturer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolType" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolDescription" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Consumable" type="bit" length="1" decimal="0" jt="-7" />
			<column name="QuantityPerCuttingEdge" type="int" length="10" decimal="0" jt="4" />
			<column name="AdditionalNotes" type="nvarchar" length="150" decimal="0" jt="12" />
			<column name="NumberofCuttingEdges" type="int" length="10" decimal="0" jt="4" />
			<column name="Quantity" type="int" length="10" decimal="0" jt="4" />
			<column name="CribToolID" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="ToolbossStock" type="bit" length="1" decimal="0" jt="-7" />
		</table>
		<table name="ToolList PartNumbers" row_count="1039" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="PartNumbers" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="ToolList Plant" row_count="1139" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="Plant" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="ToolList Plant List" row_count="10" >
			<column name="Plant" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="ToolList Rev" row_count="2593" >
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="RevisionID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="Revision" type="int" length="10" decimal="0" jt="4" />
			<column name="Revision Description" type="nvarchar" length="100" decimal="0" jt="12" />
			<column name="Revision Date" type="smalldatetime" length="16" decimal="0" jt="93" />
			<column name="Revision By" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="ToolList Tool" row_count="10538" >
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ProcessID" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="OpDescription" type="nvarchar" length="75" decimal="0" jt="12" />
			<column name="Alternate" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="PartSpecific" type="bit" length="1" decimal="0" jt="-7" mandatory="y" />
			<column name="AdjustedVolume" type="int" length="10" decimal="0" jt="4" />
			<column name="ToolOrder" type="int" length="10" decimal="0" jt="4" />
			<column name="Turret" type="char" length="1" decimal="0" jt="1" />
			<column name="ToolLength" type="decimal" length="18" decimal="3" jt="3" />
			<column name="OffsetNumber" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="ToolList ToolPartNumber" row_count="47013" >
			<column name="PartID" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="ToolID" type="int" length="10" decimal="0" jt="4" />
			<column name="PartNumber" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="ToolList Toolboss Stock Items" row_count="39" >
			<column name="ItemClass" type="char" length="20" decimal="0" jt="1" />
		</table>
		<table name="ToolList Users" row_count="1" >
			<column name="Admin" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="DeptMgr" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Buyer" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="ToolList Version" row_count="1" >
			<column name="Version" type="char" length="10" decimal="0" jt="1" />
		</table>
		<table name="ToolListAssembly" row_count="9" >
			<column name="Assembly_No" type="varchar" length="50" decimal="0" jt="12" />
			<column name="Part_No" type="varchar" length="100" decimal="0" jt="12" />
			<column name="Part_Revision" type="varchar" length="8" decimal="0" jt="12" />
			<column name="Operation_Code" type="varchar" length="30" decimal="0" jt="12" />
		</table>
		<table name="ToolListItems" row_count="24208" >
			<column name="originalprocessid" type="int" length="10" decimal="0" jt="4" />
			<column name="processid" type="int" length="10" decimal="0" jt="4" />
			<column name="partNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="itemNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="allToolOps" type="varchar(max)" length="0" decimal="0" jt="12" />
		</table>
		<table name="btDistinctToolLists" row_count="521" >
			<column name="OriginalProcessId" type="int" length="10" decimal="0" jt="4" />
			<column name="ProcessId" type="int" length="10" decimal="0" jt="4" />
			<column name="Customer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="PartFamily" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="OperationDescription" type="nvarchar" length="250" decimal="0" jt="12" />
			<column name="PartNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="nvarchar" length="356" decimal="0" jt="12" />
			<column name="CustPartFamily" type="nvarchar" length="103" decimal="0" jt="12" />
		</table>
		<table name="btDistinctToolLists010921" row_count="525" >
			<column name="OriginalProcessId" type="int" length="10" decimal="0" jt="4" />
			<column name="ProcessId" type="int" length="10" decimal="0" jt="4" />
			<column name="Customer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="PartFamily" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="OperationDescription" type="nvarchar" length="250" decimal="0" jt="12" />
			<column name="PartNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Description" type="nvarchar" length="356" decimal="0" jt="12" />
			<column name="CustPartFamily" type="nvarchar" length="103" decimal="0" jt="12" />
		</table>
		<table name="btItemsPerPart" row_count="7050" >
			<column name="partNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="itemNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="itemsPerPart" type="numeric" length="38" decimal="27" jt="2" />
			<column name="toolOps" type="varchar(max)" length="0" decimal="0" jt="12" />
		</table>
		<table name="btJobNumbersIn9B" row_count="111" >
			<column name="originalprocessid" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="btJobsIn9B" row_count="111" >
			<column name="JobNumber" type="int" length="10" decimal="0" jt="4" />
			<column name="Descr" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="alias" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plant" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="CreatedBy" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="DATECREATED" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="DATELASTMODIFIED" type="varchar" length="8" decimal="0" jt="12" mandatory="y" />
			<column name="LASTMODIFIEDBY" type="varchar" length="4" decimal="0" jt="12" mandatory="y" />
			<column name="JOBENABLE" type="int" length="10" decimal="0" jt="4" mandatory="y" />
			<column name="DATERANGEENABLE" type="int" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="btObsToolListItems" row_count="2744" >
			<column name="itemNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="opDescList" type="varchar(max)" length="0" decimal="0" jt="12" />
		</table>
		<table name="btToolBoss9BRestrictions" row_count="2274" >
			<column name="User" type="varchar" length="5" decimal="0" jt="12" mandatory="y" />
			<column name="Job" type="int" length="10" decimal="0" jt="4" />
			<column name="Machine" type="varchar" length="7" decimal="0" jt="12" mandatory="y" />
			<column name="D_Consumer" type="varchar" length="3" decimal="0" jt="12" mandatory="y" />
			<column name="item" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="D_Item" type="varchar" length="1" decimal="0" jt="12" mandatory="y" />
			<column name="plant" type="int" length="10" decimal="0" jt="4" mandatory="y" />
		</table>
		<table name="btToolBossItemsInPlant11" row_count="363" >
			<column name="item" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="btToolBossItemsInPlant12" row_count="164" >
			<column name="item" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="btToolListItems" row_count="4643" >
			<column name="itemNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="opDescList" type="varchar(max)" length="0" decimal="0" jt="12" />
		</table>
		<table name="btToolListItemsInPlant12" row_count="357" >
			<column name="itemnumber" type="nvarchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="btToolListPartItems" row_count="7774" >
			<column name="partNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="itemNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="itemsPerPart" type="numeric" length="38" decimal="27" jt="2" />
			<column name="toolOps" type="varchar(max)" length="0" decimal="0" jt="12" />
		</table>
		<table name="cncstate" row_count="4" >
			<column name="cnc" type="nvarchar" length="50" decimal="0" jt="12" mandatory="y" />
			<column name="date" type="datetime" length="23" decimal="3" jt="92" />
			<column name="job" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="shift" type="int" length="10" decimal="0" jt="4" />
			<column name="cycles" type="int" length="10" decimal="0" jt="4" />
		</table>
		<table name="dtproperties" row_count="2" >
			<column name="id" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<identity><![CDATA[IDENTITY]]></identity>
			</column>
			<column name="property" type="varchar" length="64" decimal="0" jt="12" mandatory="y" />
			<column name="objectid" type="int" length="10" decimal="0" jt="4" />
			<column name="value" type="varchar" length="255" decimal="0" jt="12" />
			<column name="uvalue" type="nvarchar" length="255" decimal="0" jt="12" />
			<column name="lvalue" type="image" length="2147483647" decimal="0" jt="-4" />
			<column name="version" type="int" length="10" decimal="0" jt="4" mandatory="y" >
				<defo><![CDATA[0]]></defo>
			</column>
			<index name="pk_dtproperties" unique="PRIMARY_KEY" >
				<column name="id" />
				<column name="property" />
			</index>
		</table>
		<table name="tmpTooListItemsAvilla" row_count="681" >
			<column name="Row_No" type="int" length="10" decimal="0" jt="4" />
			<column name="itemNumber" type="varchar" length="50" decimal="0" jt="12" />
		</table>
		<table name="toolitems" row_count="16816" >
			<column name="itemnumber" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="description1" type="varchar" length="50" decimal="0" jt="12" />
			<column name="itemclass" type="varchar" length="15" decimal="0" jt="12" mandatory="y" />
			<column name="UDFGLOBALTOOL" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="cost" type="numeric" length="19" decimal="4" jt="2" mandatory="y" />
		</table>
		<table name="toolitems010921" row_count="16945" >
			<column name="itemnumber" type="varchar" length="12" decimal="0" jt="12" mandatory="y" />
			<column name="description1" type="varchar" length="50" decimal="0" jt="12" />
			<column name="itemclass" type="varchar" length="15" decimal="0" jt="12" mandatory="y" />
			<column name="UDFGLOBALTOOL" type="varchar" length="20" decimal="0" jt="12" mandatory="y" />
			<column name="cost" type="numeric" length="19" decimal="4" jt="2" mandatory="y" />
		</table>
		<table name="toollists" row_count="803" >
			<column name="Originalprocessid" type="int" length="10" decimal="0" jt="4" />
			<column name="processid" type="int" length="10" decimal="0" jt="4" />
			<column name="customer" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="partfamily" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="OperationDescription" type="nvarchar" length="250" decimal="0" jt="12" />
			<column name="descript" type="nvarchar" length="356" decimal="0" jt="12" />
			<column name="descr" type="nvarchar" length="103" decimal="0" jt="12" />
			<column name="partNumber" type="nvarchar" length="50" decimal="0" jt="12" />
			<column name="Plant" type="int" length="10" decimal="0" jt="4" />
		</table>
		<view name="VMonthlyUsage" >
			<view_script><![CDATA[create View [dbo].[${name}] 
-- Determine combined tool list usage of this item 
AS
	SELECT CribToolID,tm.processid,(tm.Customer + '/' + tm.PartFamily + '/' + tm.OperationDescription) tlDescription , 
	tt.ToolID, ti.itemid,ti.tooldescription,tt.OpDescription,	 
	 case 
		when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when ti.Consumable = 0 then ti.Quantity
	  end MonthlyUsage  
	FROM [TOOLLIST ITEM] as ti 
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	INNER JOIN 
	(
		select tmin.* from 
		bvDistinctToolLists tl
		inner join
		[ToolList Master] tmin
		on tl.ProcessId = tmin.processid
		--731
	)tm
	ON tt.PROCESSID = tm.PROCESSID 
--30467	
]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="processid" type="int" />
			<column name="tlDescription" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="itemid" type="int" />
			<column name="tooldescription" type="nvarchar" />
			<column name="OpDescription" type="nvarchar" />
			<column name="MonthlyUsage" type="numeric" />
		</view>
		<view name="VObsMonthlyUsage" >
			<view_script><![CDATA[create View [dbo].[${name}] 
-- Determine combined tool list usage of this item 
AS
	SELECT CribToolID,tm.processid,(tm.Customer + '/' + tm.PartFamily + '/' + tm.OperationDescription) tlDescription , 
	tt.ToolID, ti.itemid,ti.tooldescription,tt.OpDescription,	 
	 case 
		when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when ti.Consumable = 0 then ti.Quantity
	  end MonthlyUsage  
	FROM [TOOLLIST ITEM] as ti 
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	INNER JOIN 
	(
		select tmin.* from 
		bvListOfObsoleteToolLists tl
		inner join
		[ToolList Master] tmin
		on tl.ProcessId = tmin.processid
		--40
	)tm
	ON tt.PROCESSID = tm.PROCESSID 
--30467	
]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="processid" type="int" />
			<column name="tlDescription" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="itemid" type="int" />
			<column name="tooldescription" type="nvarchar" />
			<column name="OpDescription" type="nvarchar" />
			<column name="MonthlyUsage" type="numeric" />
		</view>
		<view name="VTBMonthlyUsage" >
			<view_script><![CDATA[create View [dbo].[${name}] 
as
select 
	ISNULL(lv1.CribToolID,'none') as CribToolID,
	case 
		when TLMonthlyUsage is null then cast(0.0 as decimal(18,2)) 
		else cast(TLMonthlyUsage as decimal(18,2)) 
	end as TLMonthlyUsage, 
	isnull(SUBSTRING(
		list.xmlDoc.value('.', 'varchar(max)'),
		6, 10000
	),'Misc,Fixture,or Global') AS ToolLists
from
(
	select CribToolID, cast(sum(MonthlyUsage) as decimal(18,2)) TLMonthlyUsage
	from VMonthlyUsage vmu
	group by cribtoolid
) lv1
cross apply(
	select ',<br>'+ rVMonthlyUsage.DescUsage as ListItem
	from 
	(
		select CribToolID,tlDescription, sum(MonthlyUsage) MonthlyUsage,
		 tlDescription + ', ' + OpDescription + ', ' + 'Usage:' + cast(cast(sum(MonthlyUsage) as decimal(18,2)) as varchar(max)) 
		as DescUsage 
		from VMonthlyUsage vmu
		group by CribToolID,tlDescription,OpDescription,tooldescription
	) rVMonthlyUsage
	where lv1.cribtoolid=rVMonthlyUsage.cribtoolid
	order by rVMonthlyUsage.DescUsage
	for xml path(''), type
) as list(xmlDoc)]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="TLMonthlyUsage" type="decimal" />
			<column name="ToolLists" type="varchar" />
		</view>
		<view name="bvAllTListsForPN" >
			<view_script><![CDATA[create view ${name}
as
select partNumber,
case 
	when toollists is null then 'none'
	else toollists
end
as toollists
from
(
	select one.PartNumbers as partNumber,
	SUBSTRING(
		toollists.xmlDoc.value('.', 'varchar(max)'),
		6, 10000
	) AS toolLists
	from 
	(
		-- one part Number
		select distinct(partNumbers) as partNumbers from [ToolList PartNumbers]
	)one
	cross apply(
		-- many toollists
		select ',<br>'+ many.fullDescr as ListItem
		from 
		(
			-- one partNumber many toollists
			select pn.PartNumbers, 
			tm.processid,tm.Customer+' - '+tm.PartFamily+' - '+tm.OperationDescription 
			+ '<br>( origPid:' + ltrim(str(tm.ProcessID))
			+ ', Pid: ' + ltrim(str(tm.OriginalProcessID)) + ' )' as fullDescr
			from [ToolList Master] tm
			inner join
			[ToolList PartNumbers] pn
			on tm.processid=pn.ProcessID
		) many
		where one.partNumbers=many.partNumbers
		order by many.fullDescr
		for xml path(''), type
	) as toollists(xmlDoc)
) lv1
]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="toollists" type="varchar" />
		</view>
		<view name="bvCopelandToolBossItemsInPlants" >
			<view_script><![CDATA[create view [dbo].[${name}] 
as
-- toollists items that have a category that is to be stocked in the toolbosses
-- or are marked 

	select '$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, itemNumber AS item, '3' AS D_Item, plant 
	from
	(		-- Copeland Items with item classes that are stocked in the ToolBoss
			-- SELECT COUNT(*) CNT FROM ( --1939
			select originalprocessid,processid,descript,partNumber,plant,
			itemNumber,lv1.itemClass,UDFGLOBALTOOL,toolbossStock  
			from
			(
				select * from bvCopelandToolListItemsInPlants
				where toolbossstock=0 and UDFGLOBALTOOL <> 'YES'
				--27791
			) lv1
			inner join
			[ToolList Toolboss Stock Items] tbs
			on lv1.itemClass=tbs.ItemClass
			-- ) V1 -- FOR VALIDATION
			--14347
		union
			-- stocked in toolboss no matter the item
			-- class
			SELECT *  -- 0 RECORDS
			from
			bvCopelandToolListItemsInPlants
			where toolbossstock=1 
		
		union
			-- add these global items to all tool lists 
			select *  -- 165
			from
			bvCopelandToolListItemsInPlants tl
			where UDFGLOBALTOOL = 'YES'
	) S1]]></view_script>
			<column name="User" type="varchar" />
			<column name="Job" type="int" />
			<column name="Machine" type="varchar" />
			<column name="D_Consumer" type="varchar" />
			<column name="item" type="nvarchar" />
			<column name="D_Item" type="varchar" />
			<column name="plant" type="int" />
		</view>
		<view name="bvCopelandToolListItemsInPlants" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
-- SELECT COUNT(*) CNT FROM ( -- 3983 
select distinct tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.Plant, 
lv1.itemNumber,lv1.itemClass,lv1.UDFGLOBALTOOL,lv1.toolbossStock  
from bvToolListsInPlants tl
inner join
bvToolListItemsLv1 lv1
ON tl.processid = lv1.ProcessID
where lv1.UDFGLOBALTOOL <> 'YES'
and tl.descr like '%COPELAND%'
-- )V1
union
	-- select count(*) from (  -- 55 * 3 = 165
	select tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.Plant, 
	ti.itemNumber, ti.itemclass, ti.UDFGLOBALTOOL, 0 as toolbossStock 
	FROM  toolitems ti
	CROSS JOIN
	bvToolListsInPlants tl
	WHERE (ti.UDFGLOBALTOOL = 'YES')
	and tl.descr like '%COPELAND%'
	-- ) V1]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="descript" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="Plant" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="toolbossStock" type="int" />
		</view>
		<view name="bvDistinctToolListItems" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
-- Remove duplicates only differing in plant
select OriginalProcessId,ProcessId,
Descript,partNumber,itemnumber,itemclass,udfglobaltool,toolbossstock
from
bvToolListItemsInPlants
group by 
OriginalProcessId,ProcessId,
Descript,partNumber,itemnumber,itemclass,udfglobaltool,toolbossstock
--731]]></view_script>
			<column name="OriginalProcessId" type="int" />
			<column name="ProcessId" type="int" />
			<column name="Descript" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="itemnumber" type="nvarchar" />
			<column name="itemclass" type="varchar" />
			<column name="udfglobaltool" type="varchar" />
			<column name="toolbossstock" type="int" />
		</view>
		<view name="bvDistinctToolLists" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
-- Remove duplicates only differing in plant
select OriginalProcessId,ProcessId,
Customer,PartFamily,OperationDescription,PartNumber,descript Description,descr CustPartFamily
from
bvToolListsInPlants
group by 
OriginalProcessId,ProcessId,
Customer,PartFamily,OperationDescription,PartNumber,Descript,descr
]]></view_script>
			<column name="OriginalProcessId" type="int" />
			<column name="ProcessId" type="int" />
			<column name="Customer" type="nvarchar" />
			<column name="PartFamily" type="nvarchar" />
			<column name="OperationDescription" type="nvarchar" />
			<column name="PartNumber" type="nvarchar" />
			<column name="Description" type="nvarchar" />
			<column name="CustPartFamily" type="nvarchar" />
		</view>
		<view name="bvGetActiveToolLists" >
			<view_script><![CDATA[create VIEW [dbo].[${name}]
AS
	select lv8.processId,partNumber, 
			SUBSTRING(Customer + ' - ' + PartFamily + ' - ' + OperationDescription, 1, 50) descript 
	from
	(
		-- GOAL: pick only one process id to represent each part number without
		-- loosing any part numbers from the list.
		select max(processid) as processId,partNumber from
		(
			select lv5.processid,PartNumbers as partNumber from
			(
				select originalprocessid, lv3.processid  
				from
				(
					-- 718 items
					select lv1.originalprocessid, lv2.processid, obsolete,released,revinprocess
					from (
						-- sometimes 5 or more toollists have the same original processid this could be
						-- because the tool list program did not delete the old one's properly
						-- but in a common case where there is a rev in process I have chosen the min(processid)
						-- to be the one used. At this point there could still be part numbers represented by
						-- more than one original processid.
						select OriginalProcessID, min(processid) processid 
						from
						(
							-- There is nothing to prevent a new tool list from being made with a part number
							-- that is the same as another tool list.  In the scenario where there is more than
							-- one tool list with the same part numbers the tool lists could have different
							-- original process ids.  So be careful in your effort to not exclude some part numbers
							-- from the list
							-- each "rev" of a part number can have a different tool list with a different original processid
							-- and some revs can be obsolete or not released so be careful to include at least one processid
							-- for all part numbers
							select OriginalProcessID, ProcessID 
							from [ToolList Master]
							where released = 1 and Obsolete = 0 
							-- all part numbers that have any process ids that are released and not obsolete
							-- should be represented here
							-- 764
						) lv1
						group by OriginalProcessID
						-- 725
					) as lv1
					left outer join
					[ToolList Master] as lv2
					on
					lv1.processid = lv2.ProcessID
					-- 725
				) lv3 
				inner join
				(
					-- processid with items --
					select distinct processid
					from
					(
						select distinct processid 
						from [ToolList Item]
						union
						select distinct processid 
						from [ToolList Misc]
						union
						select distinct processid 
						from [ToolList Fixture]
					) as lv1
				) lv4
				on lv3.ProcessID = lv4.ProcessID
				-- try to exclude original process id chains that have no items 
				-- without loosing any part numbers in the process
				-- remember we chose the min process id in each origninal process id chain
				-- to be the representative process id for that original process id / part number chain.
				-- Theoretically we could drop some part numbers here if the min process id had no items
				-- on it but a later process id did have items.
				where lv4.ProcessID is not null
				-- 725  In my test all process ids that made it through this far had items on them
			) lv5
			--718
			inner join
			[ToolList PartNumbers] lv6
			on lv5.ProcessID = lv6.ProcessID
			-- 728  
			-- This shows that there is more than one part number associated with some original
			-- process id tool chain, or the process id that we picked to represent the original process id
			-- chain had multiple part numbers while another later one may not have.  Or no original
			-- process id chain have multiple part numbers but there is more than one original process id
			-- chain with the same part number. There could also be some original process id chains with
			-- no part number associated with it. In any case we must pick one process id to represent 
			-- each part number I have chosen the max process id because this represented the most recently
			-- revised active tool list that has that part number. 
		) lv7
		group by partNumber
		-- 529
		-- At this point we do not have duplicate part numbers and we have chosen which process id to 
		-- represent it
	) lv8
	left outer join
	[ToolList Master] as lv9
	on
	lv8.processid = lv9.ProcessID
	-- 529 
	-- We should now have picked the process id that we want to represent a part number
	-- Hopefully all part numbers with a valid tool list are on this list]]></view_script>
			<column name="processId" type="int" />
			<column name="partNumber" type="nvarchar" />
			<column name="descript" type="nvarchar" />
		</view>
		<view name="bvGetToolListsMultiPn" >
			<view_script><![CDATA[create View [dbo].[${name}]
AS
select lv7.ProcessID,
SUBSTRING(Customer + ' - ' + PartFamily + ' - ' + OperationDescription, 1, 50) descript
from
(
	select lv5.processid,count(*) cnt from
	(
		select originalprocessid, lv3.processid, tldescript as descript 
		from
		(
			-- 718 items
			select lv1.originalprocessid, lv2.processid, obsolete,released,revinprocess,
			SUBSTRING(Customer + ' - ' + PartFamily + ' - ' + OperationDescription, 1, 50) tldescript 
			from (
				select OriginalProcessID, min(processid) processid 
				from [ToolList Master]
				group by OriginalProcessID
				-- 769
			) as lv1
			left outer join
			[ToolList Master] as lv2
			on
			lv1.processid = lv2.ProcessID
			where released = 1 and Obsolete = 0 
		) lv3 
		left outer join
		(
			-- processid with items --
			select distinct processid
			from
			(
				select distinct processid 
				from [ToolList Item]
				union
				select distinct processid 
				from [ToolList Misc]
				union
				select distinct processid 
				from [ToolList Fixture]
			) as lv1
		) lv4
		on lv3.ProcessID = lv4.ProcessID
		where
		 lv4.ProcessID is not null
	) lv5
	--718
	left join
	[ToolList PartNumbers] lv6
	on lv5.ProcessID = lv6.ProcessID
	group by lv5.processid 
	having count(*) >1
) lv6
left join
[ToolList Master] lv7
on
lv6.processid = lv7.processid]]></view_script>
			<column name="ProcessID" type="int" />
			<column name="descript" type="nvarchar" />
		</view>
		<view name="bvListOfActiveApprovedToolLists" >
			<view_script><![CDATA[create view [dbo].[${name}]
AS
	select originalprocessid, lv3.processid, customer,partfamily,OperationDescription,descript,descr,subDescript,subDescr  
	from
	(
		-- add extra fields from toollist master
		select lv1.originalprocessid, lv2.processid,
			customer,partfamily,OperationDescription, 
			SUBSTRING(Customer + ' - ' + PartFamily + ' - ' + OperationDescription, 1, 50) subDescript, 
			SUBSTRING(Customer + ' - ' + PartFamily, 1, 50) subDescr, 
			Customer + ' - ' + PartFamily + ' - ' + OperationDescription as descript, 
			Customer + ' - ' + PartFamily descr, 
		obsolete,released,revinprocess
		from (
			-- There is often multiple tool lists for a single part number because each operation 
			-- performed on a Part has it's own separate tool list.

			-- When a change is made to a tool list the tool list will be duplicated.
			-- The duplicate will contain the originals processid in its revofprocessid
			-- field.
			--
			-- If someone commits this change by pressing the "create change routing" button  
			-- then the revinprocess field of the original Tool list will change to a 1.
			-- Whenever the ToolList program opens up it always looks at the toollist with the
			-- minimum processid if there is more than one toollist with the same original processid.

			--
			-- If you try to open a tool list that a change has been commited but not
			-- approved by a supervisor,ie. revinprocess of 1, you
			-- will get the following message:  There is an uncompleted change..
			-- it may not be opened until that is complete.

			-- If the change is approved the older version of the tool list is
			-- deleted.
			--  
			-- If the "create change routing" button is never pressed and the tool list
			-- is closed the copy of the tool list will be deleted.  
			-- 
			-- If the "create change routing" button is never pressed and the tool list
			-- is not closed the copy of the tool list will remain in the system. In 
			-- this case if someone else opens the tool list another tool list will be 
			-- created from the tool list with the lowest processid and the previous 
			-- copy will be removed from the database.

			--In picking which tool list to use in cases where there is multiple tool lists 
			-- having the same original processed you should always select the minimum processid 
			-- because the tool list with the higher processID has not been approved by a supervisor.
			select OriginalProcessID, min(processid) processid 
			from
			(
				-- A tool list is not ready to go until it is released.  When a tool list is created 
				-- it will be assigned a processed that will not change until it is “Submitted for Initial Release” 
				-- and has been approved.  Until this time its released field will remain equal to 0.  Once a tool 
				-- list has been approved by a supervisor its release field will change to 1 and will never return 
				-- to 0 during it lifetime.
				-- When a tool list is marked as obsolete it will be greyed out in the tool list program and should 
				-- not be added to tool bosses any longer.  It can be activated again by unchecking the obsolete 
				-- checkbox and going through the change routing process.
				select OriginalProcessID, ProcessID
				from [ToolList Master]
				where released = 1 and obsolete = 0
				--756
			) lv1
			group by OriginalProcessID
			-- 733  weed out uncommited/approved toollist changes
			-- all these processids represent toollists that should be added to the toolbosses 
		) as lv1
		left outer join
		[ToolList Master] as lv2
		on
		lv1.processid = lv2.ProcessID
		-- 733
	) lv3 
	inner join
	(
		-- There will be items on the tool list copies also but we will disregard these by selecting the min(processid)
		-- of the originalprocessid tool list chain.  Only the min(processid) is selected from the lv3 query and the 
		-- left INNER join will ensure no unapproved toollist items gets included here.
		-- All released tool lists have at least one item so this check is probably not necessary to ensure the 
		-- tool lists have items.
		select distinct processid
		from
		(
			select distinct processid 
			from [ToolList Item]
			union
			select distinct processid 
			from [ToolList Misc]
			union
			select distinct processid 
			from [ToolList Fixture]
			--814
		) as lv1
		-- 814
	) lv4
	on lv3.ProcessID = lv4.ProcessID
	-- try to exclude original process id chains that have no items 
	-- All released tool lists have at least one item so this check is probably not needed.
]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="customer" type="nvarchar" />
			<column name="partfamily" type="nvarchar" />
			<column name="OperationDescription" type="nvarchar" />
			<column name="descript" type="nvarchar" />
			<column name="descr" type="nvarchar" />
			<column name="subDescript" type="nvarchar" />
			<column name="subDescr" type="nvarchar" />
		</view>
		<view name="bvMonthlyUsageLv1" >
			<view_script><![CDATA[--/////////////////////////////////////////
-- Determine tool list items monthly usage 
--/////////////////////////////////////////
create View [dbo].[bvMonthlyUsageLv1] 
-- Determine combined tool list usage of this item 
AS
	SELECT CribToolID,tm.processid,(tm.Customer + '/' + tm.PartFamily + '/' + tm.OperationDescription) tlDescription , 
	tt.ToolID, ti.itemid,ti.tooldescription,tt.OpDescription,	 
	 case 
		when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when ti.Consumable = 0 then ti.Quantity
	  end MonthlyUsage  
	FROM [TOOLLIST ITEM] as ti 
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	INNER JOIN 
	(
		select tmin.* from 
		bvDistinctToolLists tl
		inner join
		[ToolList Master] tmin
		on tl.ProcessId = tmin.processid
		--731
	)tm
	ON tt.PROCESSID = tm.PROCESSID 
--30467	]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="processid" type="int" />
			<column name="tlDescription" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="itemid" type="int" />
			<column name="tooldescription" type="nvarchar" />
			<column name="OpDescription" type="nvarchar" />
			<column name="MonthlyUsage" type="numeric" />
		</view>
		<view name="bvMonthlyUsageLv2" >
			<view_script><![CDATA[--///////////////////////////////////////////
-- Summary of tool list items monthly usage 
--///////////////////////////////////////////
create View [dbo].[bvMonthlyUsageLv2] 
as
select 
	ISNULL(lv1.CribToolID,'none') as CribToolID,
	case 
		when TLMonthlyUsage is null then cast(0.0 as decimal(18,2)) 
		else cast(TLMonthlyUsage as decimal(18,2)) 
	end as TLMonthlyUsage, 
	isnull(SUBSTRING(
		list.xmlDoc.value('.', 'varchar(max)'),
		6, 10000
	),'Misc,Fixture,or Global') AS ToolLists
from
(
	select CribToolID, cast(sum(MonthlyUsage) as decimal(18,2)) TLMonthlyUsage
	from bvMonthlyUsageLv1 vmu
	group by cribtoolid
) lv1
cross apply(
	select ',<br>'+ rVMonthlyUsage.DescUsage as ListItem
	from 
	(
		select CribToolID,tlDescription, sum(MonthlyUsage) MonthlyUsage,
		 tlDescription + ', ' + OpDescription + ', ' + 'Usage:' + cast(cast(sum(MonthlyUsage) as decimal(18,2)) as varchar(max)) 
		as DescUsage 
		from bvMonthlyUsageLv1 vmu
		group by CribToolID,tlDescription,OpDescription,tooldescription
		--1787
	) rVMonthlyUsage
	where lv1.cribtoolid=rVMonthlyUsage.cribtoolid
	order by rVMonthlyUsage.DescUsage
	for xml path(''), type
) as list(xmlDoc)]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="TLMonthlyUsage" type="decimal" />
			<column name="ToolLists" type="varchar" />
		</view>
		<view name="bvObsMonthlyUsageLv1" >
			<view_script><![CDATA[--///////////////////////////////////////////////////
-- Determine obsolete tool list items monthly usage 
--///////////////////////////////////////////////////
create View [dbo].[bvObsMonthlyUsageLv1] 
AS
	SELECT CribToolID,tm.processid,(tm.Customer + '/' + tm.PartFamily + '/' + tm.OperationDescription) tlDescription , 
	tt.ToolID, ti.itemid,ti.tooldescription,tt.OpDescription,	 
	 case 
		when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when ti.Consumable = 0 then ti.Quantity
	  end MonthlyUsage  
	FROM [TOOLLIST ITEM] as ti 
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	INNER JOIN 
	(
		select tmin.* from 
		bvObsoleteToolLists tl
		inner join
		[ToolList Master] tmin
		on tl.ProcessId = tmin.processid
		--40
	)tm
	ON tt.PROCESSID = tm.PROCESSID 
--1852	]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="processid" type="int" />
			<column name="tlDescription" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="itemid" type="int" />
			<column name="tooldescription" type="nvarchar" />
			<column name="OpDescription" type="nvarchar" />
			<column name="MonthlyUsage" type="numeric" />
		</view>
		<view name="bvObsMonthlyUsageLv2" >
			<view_script><![CDATA[--///////////////////////////////////////////////////
-- Summary of obsolete tool list items monthly usage 
--///////////////////////////////////////////////////
create View [dbo].[bvObsMonthlyUsageLv2] 
as
select 
	ISNULL(lv1.CribToolID,'none') as CribToolID,
	case 
		when TLMonthlyUsage is null then cast(0.0 as decimal(18,2)) 
		else cast(TLMonthlyUsage as decimal(18,2)) 
	end as TLMonthlyUsage, 
	isnull(SUBSTRING(
		list.xmlDoc.value('.', 'varchar(max)'),
		6, 10000
	),'Misc,Fixture,or Global') AS ToolLists
from
(
	select CribToolID, cast(sum(MonthlyUsage) as decimal(18,2)) TLMonthlyUsage
	from bvObsMonthlyUsageLv1 vmu
	group by cribtoolid
) lv1
cross apply(
	select ',<br>'+ rVMonthlyUsage.DescUsage as ListItem
	from 
	(
		select CribToolID,tlDescription, sum(MonthlyUsage) MonthlyUsage,
		 tlDescription + ', ' + OpDescription + ', ' + 'Usage:' + cast(cast(sum(MonthlyUsage) as decimal(18,2)) as varchar(max)) 
		as DescUsage 
		from bvObsMonthlyUsageLv1 vmu
		group by CribToolID,tlDescription,OpDescription,tooldescription
		--1787
	) rVMonthlyUsage
	where lv1.cribtoolid=rVMonthlyUsage.cribtoolid
	order by rVMonthlyUsage.DescUsage
	for xml path(''), type
) as list(xmlDoc)

]]></view_script>
			<column name="CribToolID" type="nvarchar" />
			<column name="TLMonthlyUsage" type="decimal" />
			<column name="ToolLists" type="varchar" />
		</view>
		<view name="bvObsToolListItemsLv1" >
			<view_script><![CDATA[-------------------------------------------------
-- Obsolete ToolList items,misc,and fixture detail
-------------------------------------------------
create View [dbo].[bvObsToolListItemsLv1] 
AS
	SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber, (tm.Customer + ' / ' + tm.PartFamily + ' / ' + tm.OperationDescription) tlDescription,
	tt.ToolID, tt.processid as ttpid, tt.toolNumber,tt.OpDescription, 
	ti.itemid,ti.tooltype,ti.tooldescription,  
	 case 
		when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
		when ti.Consumable = 0 then ti.Quantity
	  end MonthlyUsage  
	FROM [TOOLLIST ITEM] as ti 
	-- when a tool gets deleted the toollist item remains sometimes?
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	INNER JOIN 
	(
		-- these are obsolete toollists
		select * 
		from
		[ToolList Master] tm
		where Obsolete = 1
		--43
	) as tm 
	ON tt.PROCESSID = tm.PROCESSID 
	--1925
union
	SELECT tm.originalprocessid, tm.processid,CribToolID as itemNumber, (tm.Customer + ' / ' + tm.PartFamily + ' / ' + tm.OperationDescription) tlDescription,
	0 as ToolID, 0 as ttpid, 0 as toolNumber,'Fixture' as OpDescription, 
	tf.itemid,tf.tooltype,tf.tooldescription,  
	0 as MonthlyUsage  
	FROM [TOOLLIST Fixture] as tf 
	INNER JOIN 
	(
		-- these are obsolete toollists
		select * 
		from
		[ToolList Master] tm
		where Obsolete = 1
		--43
	) as tm 
	ON tf.PROCESSID = tm.PROCESSID 
	--48
union
	SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber, (tm.Customer + ' / ' + tm.PartFamily + ' / ' + tm.OperationDescription) tlDescription,
	0 as ToolID, 0 as ttpid, 0 as toolNumber,'Misc' as OpDescription, 
	m.itemid,m.tooltype,m.tooldescription,  
	 case 
		when m.Consumable = 1 then (m.Quantity * (tm.AnnualVolume/12.0)) / (m.QuantityPerCuttingEdge * m.NumberOfCuttingEdges) 
		else m.Quantity
	  end MonthlyUsage  
	FROM [ToolList Misc] as m 
	INNER JOIN 
	(
		-- these are obsolete toollists
		select * 
		from
		[ToolList Master] tm
		where Obsolete = 1
		--43
	)  
	as tm 
	ON m.PROCESSID = tm.PROCESSID 
	--370
--1983
]]></view_script>
			<column name="OriginalProcessID" type="int" />
			<column name="processid" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="tlDescription" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="ttpid" type="int" />
			<column name="toolNumber" type="int" />
			<column name="OpDescription" type="nvarchar" />
			<column name="itemid" type="int" />
			<column name="tooltype" type="nvarchar" />
			<column name="tooldescription" type="nvarchar" />
			<column name="MonthlyUsage" type="numeric" />
		</view>
		<view name="bvObsToolListItemsLv2" >
			<view_script><![CDATA[-------------------------------------------------
-- Obsolete ToolList items,misc,and fixture detail
-- grouped by item 
-------------------------------------------------
create view [dbo].[bvObsToolListItemsLv2] 
as
SELECT itemNumber,monthlyUsage,
	isnull(SUBSTRING(
		opDesclist.xmlDoc.value('.', 'varchar(max)'),
		5, 10000
	),'Misc,Fixture, or Global') AS ToolOps
FROM  
(
	select itemNumber,sum(monthlyUsage) monthlyUsage
	from bvObsToolListItemsLv1
	group by 
	itemNumber 
	--24374
)
tli
--28328
cross apply(
	select '<br>' +  tlDescription + ', ' + ca1.OpDescription + 
	', ' + tooldescription as ListItem
	from 
	(
		select itemnumber,tlDescription,
		opDescription,tooldescription,monthlyUsage
		from bvObsToolListItemsLv1
		--1983
	) ca1
	where tli.itemNumber=ca1.itemNumber
	order by tlDescription,ca1.OpDescription
	for xml path(''), type
) as opDesclist(xmlDoc)]]></view_script>
			<column name="itemNumber" type="nvarchar" />
			<column name="monthlyUsage" type="numeric" />
			<column name="ToolOps" type="varchar" />
		</view>
		<view name="bvTRXToolBossItemsInPlants" >
			<view_script><![CDATA[create view [dbo].[${name}] 
as
-- toollists items that have a category that is to be stocked in the toolbosses
-- or are marked 

	select '$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, itemNumber AS item, '3' AS D_Item, plant 
	from
	(		-- Copeland Items with item classes that are stocked in the ToolBoss
			-- SELECT COUNT(*) CNT FROM ( --42
			select originalprocessid,processid,descript,partNumber,plant,
			itemNumber,lv1.itemClass,UDFGLOBALTOOL,toolbossStock  
			from
			(
				select * from bvTRXToolListItemsInPlants
				where toolbossstock=0 and UDFGLOBALTOOL <> 'YES'
				--90
			) lv1
			inner join
			[ToolList Toolboss Stock Items] tbs
			on lv1.itemClass=tbs.ItemClass
			-- ) V1 -- FOR VALIDATION
			--14347
		union
			-- stocked in toolboss no matter the item
			-- class
			SELECT *  -- 0 RECORDS
			from
			bvTRXToolListItemsInPlants
			where toolbossstock=1 
		
		union
			-- add these global items to all tool lists 
			select *  -- 6
			from
			bvTRXToolListItemsInPlants tl
			where UDFGLOBALTOOL = 'YES'
	) S1]]></view_script>
			<column name="User" type="varchar" />
			<column name="Job" type="int" />
			<column name="Machine" type="varchar" />
			<column name="D_Consumer" type="varchar" />
			<column name="item" type="nvarchar" />
			<column name="D_Item" type="varchar" />
			<column name="plant" type="int" />
		</view>
		<view name="bvTRXToolListItemsInPlants" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
-- SELECT COUNT(*) CNT FROM ( -- 3983 
select distinct tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.Plant, 
lv1.itemNumber,lv1.itemClass,lv1.UDFGLOBALTOOL,lv1.toolbossStock  
from bvToolListsInPlants tl
inner join
bvToolListItemsLv1 lv1
ON tl.processid = lv1.ProcessID
where lv1.UDFGLOBALTOOL <> 'YES'
and tl.descr like '%TRX%'
-- )V1
union
	-- select count(*) from (  -- 55 * 3 = 165
	select tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.Plant, 
	ti.itemNumber, ti.itemclass, ti.UDFGLOBALTOOL, 0 as toolbossStock 
	FROM  toolitems ti
	CROSS JOIN
	bvToolListsInPlants tl
	WHERE (ti.UDFGLOBALTOOL = 'YES')
	and tl.descr like '%TRX%'
	-- ) V1]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="descript" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="Plant" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="toolbossStock" type="int" />
		</view>
		<view name="bvToolBossItemsInPlants" >
			<view_script><![CDATA[create view [dbo].[${name}] 
as
-- toollists items that have a category that is to be stocked in the toolbosses
-- or are marked 

	select '$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, itemNumber AS item, '3' AS D_Item, plant 
	from
	(
			select originalprocessid,processid,descript,partNumber,plant,
			itemNumber,lv1.itemClass,UDFGLOBALTOOL,toolbossStock  
			from
			(
				select * from bvToolListItemsInPlants
				where toolbossstock=0 and UDFGLOBALTOOL <> 'YES'
				--27791
			) lv1
			inner join
			[ToolList Toolboss Stock Items] tbs
			on lv1.itemClass=tbs.ItemClass
			--14347
		union
			-- stocked in toolboss no matter the item
			-- class
			SELECT *
			from
			bvToolListItemsInPlants
			where toolbossstock=1 and UDFGLOBALTOOL <> 'YES'
			--17
		union
			-- add these global items to all tool lists 
			select *
			from
			bvToolListItemsInPlants
			where UDFGLOBALTOOL = 'YES'
			--2388
	--16752
	--16752
) lv2]]></view_script>
			<column name="User" type="varchar" />
			<column name="Job" type="int" />
			<column name="Machine" type="varchar" />
			<column name="D_Consumer" type="varchar" />
			<column name="item" type="nvarchar" />
			<column name="D_Item" type="varchar" />
			<column name="plant" type="int" />
		</view>
		<view name="bvToolBossItemsWithProcessId" >
			<view_script><![CDATA[create view ${name}
as
-- toollists items that have a category that is to be stocked in the toolbosses
-- or are marked 

	select processid,'$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, itemNumber AS item, '3' AS D_Item, plant 
	from
	(
			select originalprocessid,processid,descript,partNumber,plant,
			itemNumber,lv1.itemClass,UDFGLOBALTOOL,toolbossStock  
			from
			(
				select * from bvToolListItemsInPlants
				where toolbossstock=0 and UDFGLOBALTOOL <> 'YES'
				--27791
			) lv1
			inner join
			[ToolList Toolboss Stock Items] tbs
			on lv1.itemClass=tbs.ItemClass
			--14347
		union
			-- stocked in toolboss no matter the item
			-- class
			SELECT *
			from
			bvToolListItemsInPlants
			where toolbossstock=1 and UDFGLOBALTOOL <> 'YES'
			--17
		union
			-- add these global items to all tool lists 
			select *
			from
			bvToolListItemsInPlants
			where UDFGLOBALTOOL = 'YES'
			--2388
	--16752
	--16752
) lv2]]></view_script>
			<column name="processid" type="int" />
			<column name="User" type="varchar" />
			<column name="Job" type="int" />
			<column name="Machine" type="varchar" />
			<column name="D_Consumer" type="varchar" />
			<column name="item" type="nvarchar" />
			<column name="D_Item" type="varchar" />
			<column name="plant" type="int" />
		</view>
		<view name="bvToolBossJobList" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
		select 
		OriginalProcessID AS JobNumber, 
		subDescript as Descr, 
	--	SUBSTRING(Customer + ' - ' + PartFamily + ' - ' + OperationDescription, 1, 50) descript, 
		partNumber as alias, 
		Plant,
		'SSIS' AS CreatedBy, 
		'6/9/2011' AS DATECREATED, 
		'6/9/2011' AS DATELASTMODIFIED, 
		'SSIS' AS LASTMODIFIEDBY, 
		1 AS JOBENABLE, 
		0 AS DATERANGEENABLE
		from bvToolListsInPlants
		--803]]></view_script>
			<column name="JobNumber" type="int" />
			<column name="Descr" type="nvarchar" />
			<column name="alias" type="nvarchar" />
			<column name="Plant" type="int" />
			<column name="CreatedBy" type="varchar" />
			<column name="DATECREATED" type="varchar" />
			<column name="DATELASTMODIFIED" type="varchar" />
			<column name="LASTMODIFIEDBY" type="varchar" />
			<column name="JOBENABLE" type="int" />
			<column name="DATERANGEENABLE" type="int" />
		</view>
		<view name="bvToolBossRestrictions2" >
			<view_script><![CDATA[create view ${name}
as
-- toollists items that have a category that is to be stocked in the toolbosses
-- or are marked 

	select processid,'$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, itemNumber AS item, '3' AS D_Item, plant 
	from
	(
			select originalprocessid,processid,descript,partNumber,plant,
			itemNumber,lv1.itemClass,UDFGLOBALTOOL,toolbossStock  
			from
			(
				select * from bvToolListItemsInPlants
				where toolbossstock=0 and UDFGLOBALTOOL <> 'YES'
				--27791
			) lv1
			inner join
			[ToolList Toolboss Stock Items] tbs
			on lv1.itemClass=tbs.ItemClass
			--14347
		union
			-- stocked in toolboss no matter the item
			-- class
			SELECT *
			from
			bvToolListItemsInPlants
			where toolbossstock=1 and UDFGLOBALTOOL <> 'YES'
			--17
		union
			-- add these global items to all tool lists 
			select *
			from
			bvToolListItemsInPlants
			where UDFGLOBALTOOL = 'YES'
			--2388
	--16752
	--16752
) lv2]]></view_script>
			<column name="processid" type="int" />
			<column name="User" type="varchar" />
			<column name="Job" type="int" />
			<column name="Machine" type="varchar" />
			<column name="D_Consumer" type="varchar" />
			<column name="item" type="nvarchar" />
			<column name="D_Item" type="varchar" />
			<column name="plant" type="int" />
		</view>
		<view name="bvToolListItemsFixtureOnlyLv1" >
			<view_script><![CDATA[create View [dbo].[${name}] 
AS
select lv2.*,ti.itemClass,ti.UDFGLOBALTOOL,ti.cost
from
(
	select tl.partNumber,tl.Description as tlDescription, lv1.*
	from
	(
		SELECT tm.originalprocessid, tm.processid,CribToolID as itemNumber, 
		0 as ToolID, 0 as ttpid, 111111 ToolNumber,'Fixture' as OpDescription, 
		tf.itemid,tf.tooltype,tf.tooldescription,  
		Quantity,AnnualVolume,0 as AdjustedVolume,0 as QuantityPerCuttingEdge,0 as NumberOfCuttingEdges,
		'fixture' as itemType,0 as partspecific, 0 as Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		cast(0.0 as numeric(19,8)) itemsPerPart, 
		0 as MonthlyUsage, 0 as DailyUsage
		FROM [TOOLLIST Fixture] as tf 
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		) as tm 
		ON tf.PROCESSID = tm.PROCESSID 
	)lv1
	inner join 
	btDistinctToolLists tl
	on lv1.ProcessID=tl.processid
	--32571
)lv2
-- drop items that are not in the crib
inner join
toolitems ti
on lv2.itemNumber=ti.itemnumber]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="tlDescription" type="nvarchar" />
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="ttpid" type="int" />
			<column name="ToolNumber" type="int" />
			<column name="OpDescription" type="varchar" />
			<column name="itemid" type="int" />
			<column name="tooltype" type="nvarchar" />
			<column name="tooldescription" type="nvarchar" />
			<column name="Quantity" type="int" />
			<column name="AnnualVolume" type="int" />
			<column name="AdjustedVolume" type="int" />
			<column name="QuantityPerCuttingEdge" type="int" />
			<column name="NumberOfCuttingEdges" type="int" />
			<column name="itemType" type="varchar" />
			<column name="partspecific" type="int" />
			<column name="Consumable" type="int" />
			<column name="toolbossStock" type="int" />
			<column name="itemsPerPart" type="numeric" />
			<column name="MonthlyUsage" type="int" />
			<column name="DailyUsage" type="int" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="cost" type="numeric" />
		</view>
		<view name="bvToolListItemsInPlants" >
			<view_script><![CDATA[--///////////////////////////////////////////////////////////////////////////////
-- This view does not take into consideration the [ToolList Toolboss Stock Items]
-- table which lists the item classes to be stocked in the toolbosses. See
-- bvToolBossItemsInPlants to determine items to be stocked in the ToolBosses.
-- This list would be appropriate to list restrictions for the Cribmaster if you
-- grouped the recordset on all fields except plant.
--///////////////////////////////////////////////////////////////////////////////
create view [dbo].[bvToolListItemsInPlants]
as
select distinct tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.plant,
lv1.itemNumber,lv1.itemClass,lv1.UDFGLOBALTOOL,lv1.toolbossStock  
from bvToolListsInPlants tl
inner join
bvToolListItemsLv1 lv1
ON tl.processid = lv1.ProcessID
where lv1.UDFGLOBALTOOL <> 'YES'
--27838
union
	-- 796 select count(*) from bvToolListsInPlants
	select tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.plant
	,ti.itemNumber, ti.itemclass, ti.UDFGLOBALTOOL, 0 as toolbossStock 
	FROM  toolitems ti
	CROSS JOIN
	bvToolListsInPlants tl
	WHERE (ti.UDFGLOBALTOOL = 'YES')]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="descript" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="plant" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="toolbossStock" type="int" />
		</view>
		<view name="bvToolListItemsInPlantsNew" >
			<view_script><![CDATA[create view [dbo].[${name}]
as
select distinct tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.plant,
lv1.itemNumber,lv1.itemClass,lv1.UDFGLOBALTOOL,lv1.toolbossStock  
from bvToolListsInPlants tl
inner join
bvToolListItemsLv1 lv1
ON tl.processid = lv1.ProcessID
where lv1.UDFGLOBALTOOL <> 'YES'
--27838
union
	-- 796 select count(*) from bvToolListsInPlants
	select tl.originalprocessid,tl.processid,tl.descript,tl.partNumber,tl.plant
	,ti.itemNumber, ti.itemclass, ti.UDFGLOBALTOOL, 0 as toolbossStock 
	FROM  toolitems ti
	CROSS JOIN
	bvToolListsInPlants tl
	WHERE (ti.UDFGLOBALTOOL = 'YES')
	--2391
--30229]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="descript" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="plant" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="toolbossStock" type="int" />
		</view>
		<view name="bvToolListItemsLv1" >
			<view_script><![CDATA[--////////////////////////////////////////////////
-- Each toolid/item could have a different items
-- per part ratio, but the toolbosses dont currently
-- have an opsdescription in the restrictions2 table
-- so we have to choose the toolids items per part ratio
-- for costing purposes.
-- /////////////////////////////////////////////////
create View [dbo].[bvToolListItemsLv1] 
AS
select lv2.*,ti.itemClass,ti.UDFGLOBALTOOL,ti.cost
from
(
	select tl.partNumber,tl.Description as tlDescription, lv1.*
	from
	(
		SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber,
		tt.ToolID, tt.processid as ttpid, tt.toolNumber,tt.OpDescription, 
		ti.itemid,ti.tooltype,ti.tooldescription,
		Quantity,
		AnnualVolume,
		AdjustedVolume,
		QuantityPerCuttingEdge,
		NumberOfCuttingEdges,
		'item' as itemType,partspecific,
		Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		case
			when (Quantity=0) or (NumberofCuttingEdges =0) or (QuantityPerCuttingEdge=0) or
			(Quantity is null) or (NumberofCuttingEdges is null) or (QuantityPerCuttingEdge is null)
				then 0
			when (Consumable = 1)
				then 1/((QuantityPerCuttingEdge/cast( ti.quantity as numeric(19,8)))*NumberofCuttingEdges)
			when Consumable = 0 then 0.0
		end itemsPerPart, 
		case 
			when tt.PartSpecific = 0 and ti.Consumable = 1 then (Quantity * (AnnualVolume/12.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when ti.Consumable = 0 then ti.Quantity
		end MonthlyUsage,  
		case 
			when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/365.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/365)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8))
			when ti.Consumable = 0 then ti.Quantity/30
		end DailyUsage  
		FROM [TOOLLIST ITEM] as ti 
		-- when a tool gets deleted the toollist item remains?
		inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		) as tm 
		ON tt.PROCESSID = tm.PROCESSID 
		--30432
	union
		SELECT tm.originalprocessid, tm.processid,CribToolID as itemNumber, 
		0 as ToolID, 0 as ttpid, 0 as toolNumber,'Fixture' as OpDescription, 
		tf.itemid,tf.tooltype,tf.tooldescription,  
		Quantity,AnnualVolume,0 as AdjustedVolume,0 as QuantityPerCuttingEdge,0 as NumberOfCuttingEdges,
		'fixture' as itemType,0 as partspecific, 0 as Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		cast(0.0 as numeric(19,8)) itemsPerPart, 
		0 as MonthlyUsage, 0 as DailyUsage
		FROM [TOOLLIST Fixture] as tf 
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		) as tm 
		ON tf.PROCESSID = tm.PROCESSID 
		--1648
	union
		SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber, 
		0 as ToolID, 0 as ttpid, 0 as toolNumber,'Misc' as OpDescription, 
		m.itemid,m.tooltype,m.tooldescription,  
		Quantity,AnnualVolume,0 as AdjustedVolume,QuantityPerCuttingEdge,NumberOfCuttingEdges,
		'misc' as itemType, 0 as partspecific,m.Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		case
			when (Quantity=0) or (NumberofCuttingEdges =0) or (QuantityPerCuttingEdge=0) or
			(Quantity is null) or (NumberofCuttingEdges is null) or (QuantityPerCuttingEdge is null)
				then 0
			when (Consumable = 1)
				then 1/((QuantityPerCuttingEdge/cast( quantity as numeric(19,8)))*NumberofCuttingEdges)
			when Consumable = 0 then 0.0
		end itemsPerPart, 
		case 
			when m.Consumable = 1 then (m.Quantity * (tm.AnnualVolume/12.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8))
			else m.Quantity
		end MonthlyUsage,  
		case 
			when m.Consumable = 1 then (m.Quantity * (tm.AnnualVolume/365.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			else m.Quantity/30
		end DailyUsage  
		FROM [ToolList Misc] as m 
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		)  
		as tm 
		ON m.PROCESSID = tm.PROCESSID 
		--371
	--32571
	)lv1
	inner join 
	btDistinctToolLists tl
	on lv1.ProcessID=tl.processid
	--32571
)lv2
-- drop items that are not in the crib
inner join
toolitems ti
on lv2.itemNumber=ti.itemnumber
--32438]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="tlDescription" type="nvarchar" />
			<column name="OriginalProcessID" type="int" />
			<column name="processid" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="ttpid" type="int" />
			<column name="toolNumber" type="int" />
			<column name="OpDescription" type="nvarchar" />
			<column name="itemid" type="int" />
			<column name="tooltype" type="nvarchar" />
			<column name="tooldescription" type="nvarchar" />
			<column name="Quantity" type="int" />
			<column name="AnnualVolume" type="int" />
			<column name="AdjustedVolume" type="int" />
			<column name="QuantityPerCuttingEdge" type="int" />
			<column name="NumberOfCuttingEdges" type="int" />
			<column name="itemType" type="varchar" />
			<column name="partspecific" type="int" />
			<column name="Consumable" type="int" />
			<column name="toolbossStock" type="int" />
			<column name="itemsPerPart" type="numeric" />
			<column name="MonthlyUsage" type="numeric" />
			<column name="DailyUsage" type="numeric" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="cost" type="numeric" />
		</view>
		<view name="bvToolListItemsLv2" >
			<view_script><![CDATA[---------------------------------------------
-- simplier version
-- ToolList items that are in plants with Tool 
-- Ops description list
-----------------------------------------------
create view [dbo].[bvToolListItemsLv2] 
as
-- ToolList items that are in plants with Tool
SELECT originalprocessid,processid, partNumber, itemNumber,
	isnull(SUBSTRING(
		opDesclist.xmlDoc.value('.', 'varchar(max)'),
		6, 10000
	),'Misc,Fixture, or Global') AS ToolOps
FROM  
(
	select distinct originalprocessid,processid, partNumber, itemNumber
	from bvToolListItemsInPlants 
	--28333
)
tli
--28328
cross apply(
	select ',<br>' +  tlDescription + ', ' + ca1.OpDescription + ', ' + tooldescription as ListItem
	from 
	(
			select ti.processId,ti.CribToolID as itemNumber,ti.tooldescription,
			tt.OpDescription,
			(tm.Customer + '/' + tm.PartFamily + '/' + tm.OperationDescription) tlDescription
			FROM [TOOLLIST ITEM] as ti 
			-- when a tool gets deleted the toollist item remains?
			-- we don't want the toollist item if it is not on a toollist tool
			inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
			inner join [TOOLLIST Master] as tm on tm.ProcessID=ti.ProcessID
			--34946
	) ca1
	where tli.processId=ca1.processId and tli.itemNumber=ca1.itemNumber
	order by ca1.OpDescription
	for xml path(''), type
) as opDesclist(xmlDoc)
--28328
]]></view_script>
			<column name="originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="partNumber" type="nvarchar" />
			<column name="itemNumber" type="nvarchar" />
			<column name="ToolOps" type="varchar" />
		</view>
		<view name="bvToolListItemsLv2byItem" >
			<view_script><![CDATA[-------------------------------------------------
-- Active ToolList items,misc,and fixture detail
-- grouped by item number 
-------------------------------------------------
create view [dbo].[bvToolListItemsLv2byItem] 
as
SELECT itemNumber,monthlyUsage,dailyUsage,
	isnull(SUBSTRING(
		opDesclist.xmlDoc.value('.', 'varchar(max)'),
		5, 10000
	),'Misc,Fixture, or Global') AS ToolOps
FROM  
(
	select itemNumber,sum(monthlyUsage) monthlyUsage,sum(dailyUsage) dailyUsage
	from bvToolListItemsLv1
	group by 
	itemNumber 
	--4652
)
tli
cross apply(
	select '<br>' +  tlDescription + ', ' + ca1.OpDescription + 
	', ' + tooldescription as ListItem
	from 
	(
		select partNumber,itemnumber,tlDescription,
		opDescription,tooldescription,itemsPerPart
		from bvToolListItemsLv1
		--32571
	) ca1
	where tli.itemNumber=ca1.itemNumber
	order by ca1.OpDescription
	for xml path(''), type
) as opDesclist(xmlDoc)
--4652
--56sec]]></view_script>
			<column name="itemNumber" type="nvarchar" />
			<column name="monthlyUsage" type="numeric" />
			<column name="dailyUsage" type="numeric" />
			<column name="ToolOps" type="varchar" />
		</view>
		<view name="bvToolListItemsLv2byPart" >
			<view_script><![CDATA[---------------------------------------------
-- Monthly Toollist items usage detail 
-- Consumable items only
-- costs are based on annualvolume field
-----------------------------------------------
create view [dbo].[bvToolListItemsLv2byPart] 
as
SELECT partNumber, itemNumber,itemsPerPart,monthlyCost,dailyCost,
	isnull(SUBSTRING(
		opDesclist.xmlDoc.value('.', 'varchar(max)'),
		5, 10000
	),'Misc,Fixture, or Global') AS ToolOps
FROM  
(
	select partNumber, itemNumber,consumable,
	sum(itemsPerPart) as itemsPerPart,
	sum(monthlyUsage*cost) monthlyCost,sum(dailyUsage*cost) dailyCost
	from bvToolListItemsLv1
	group by 
	partNumber, itemNumber,consumable
	having Consumable = 1 
	-- 7085
	--24361
)
tli
--28328
cross apply(
	select '<br>' +  tlDescription + ', ' + ca1.OpDescription + ', ' + tooldescription + 
	'<br>Item Type:' + cast(ItemType as varchar(10)),
	', Consumable:' + cast(Consumable as varchar(10)),
	', PartSpecific:' + cast(PartSpecific as varchar(10)),
	', Quantity Per Tool:' + cast(Quantity as varchar(10)),
	'<br>Annual Volume:' + cast(AnnualVolume as varchar(10)),
	', Adjusted Volume:' + cast(AdjustedVolume as varchar(10)),
	', Quantity Per Cutting Edge:' + cast(QuantityPerCuttingEdge as varchar(10)),
	', Number Of Cutting Edges:' + cast(NumberOfCuttingEdges as varchar(10)),
	'<br>Items Per Part:' + cast(cast(itemsPerPart as numeric(19,8)) as varchar(50)),
	'<br>Monthly Usage:' + cast(cast(monthlyUsage as numeric(19,8)) as varchar(50)) as ListItem
	from 
	(
		select partNumber,itemnumber,tlDescription,
		opDescription,tooldescription,monthlyUsage,
		itemType,Quantity,AnnualVolume,QuantityPerCuttingEdge,NumberOfCuttingEdges,
		Consumable,PartSpecific,AdjustedVolume
		from bvToolListItemsLv1
		--32571
	) ca1
	where tli.partNumber=ca1.partNumber and tli.itemNumber=ca1.itemNumber
	order by ca1.OpDescription
	for xml path(''), type
) as opDesclist(xmlDoc)
--26361
--56sec]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="itemNumber" type="nvarchar" />
			<column name="itemsPerPart" type="numeric" />
			<column name="monthlyCost" type="numeric" />
			<column name="dailyCost" type="numeric" />
			<column name="ToolOps" type="varchar" />
		</view>
		<view name="bvToolListItemsLv3byPart" >
			<view_script><![CDATA[-------------------------------------------------
-- PartNumber daily and monthy 
-- budgeted tool cost
-------------------------------------------------
create view [dbo].[bvToolListItemsLv3byPart] 
as
select partNumber,sum(monthlyCost) monthlyCost,sum(dailyCost) dailyCost
from 
bvToolListItemsLv2byPart
group by partNumber
--531
-- 1min 50 sec]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="monthlyCost" type="numeric" />
			<column name="dailyCost" type="numeric" />
		</view>
		<view name="bvToolListItemsMiscOnlyLv1" >
			<view_script><![CDATA[--////////////////////////////////////////////////
-- Each toolid/item could have a different items
-- per part ratio, but the toolbosses dont currently
-- have an opsdescription in the restrictions2 table
-- so we have to choose the toolids items per part ratio
-- for costing purposes.
-- /////////////////////////////////////////////////
create View [dbo].[bvToolListItemsMiscOnlyLv1] 
AS
select lv2.*,ti.itemClass,ti.UDFGLOBALTOOL,ti.cost
from
(
	select tl.partNumber,tl.Description as tlDescription, lv1.*
	from
	(

		SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber, 
		0 as ToolID, 0 as ttpid,222222 ToolNumber,'Misc' as OpDescription, 
		m.itemid,m.tooltype,m.tooldescription,  
		Quantity,AnnualVolume,0 as AdjustedVolume,QuantityPerCuttingEdge,NumberOfCuttingEdges,
		'misc' as itemType, 0 as partspecific,m.Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		case
			when (Quantity=0) or (NumberofCuttingEdges =0) or (QuantityPerCuttingEdge=0) or
			(Quantity is null) or (NumberofCuttingEdges is null) or (QuantityPerCuttingEdge is null)
				then 0
			when (Consumable = 1)
				then 1/((QuantityPerCuttingEdge/cast( quantity as numeric(19,8)))*NumberofCuttingEdges)
			when Consumable = 0 then 0.0
		end itemsPerPart, 
		case 
			when m.Consumable = 1 then (m.Quantity * (tm.AnnualVolume/12.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8))
			else m.Quantity
		end MonthlyUsage,  
		case 
			when m.Consumable = 1 then (m.Quantity * (tm.AnnualVolume/365.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			else m.Quantity/30
		end DailyUsage  
		FROM [ToolList Misc] as m 
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		)  
		as tm 
		ON m.PROCESSID = tm.PROCESSID 
		--371
	--32571
	)lv1
	inner join 
	btDistinctToolLists tl
	on lv1.ProcessID=tl.processid
	--32571
)lv2
-- drop items that are not in the crib
inner join
toolitems ti
on lv2.itemNumber=ti.itemnumber]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="tlDescription" type="nvarchar" />
			<column name="OriginalProcessID" type="int" />
			<column name="processid" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="ttpid" type="int" />
			<column name="ToolNumber" type="int" />
			<column name="OpDescription" type="varchar" />
			<column name="itemid" type="int" />
			<column name="tooltype" type="nvarchar" />
			<column name="tooldescription" type="nvarchar" />
			<column name="Quantity" type="int" />
			<column name="AnnualVolume" type="int" />
			<column name="AdjustedVolume" type="int" />
			<column name="QuantityPerCuttingEdge" type="int" />
			<column name="NumberOfCuttingEdges" type="int" />
			<column name="itemType" type="varchar" />
			<column name="partspecific" type="int" />
			<column name="Consumable" type="bit" />
			<column name="toolbossStock" type="int" />
			<column name="itemsPerPart" type="numeric" />
			<column name="MonthlyUsage" type="numeric" />
			<column name="DailyUsage" type="numeric" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="cost" type="numeric" />
		</view>
		<view name="bvToolListItemsOnlyLv1" >
			<view_script><![CDATA[create View [dbo].[${name}] 
AS
select lv2.*,ti.itemClass,ti.UDFGLOBALTOOL,ti.cost
from
(
	select tl.partNumber,tl.Description as tlDescription, lv1.*
	from
	(
		SELECT tm.OriginalProcessID, tm.processid,CribToolID as itemNumber,
		tt.ToolID, tt.processid as ttpid, tt.toolNumber,tt.OpDescription, 
		ti.itemid,ti.tooltype,ti.tooldescription,
		Quantity,
		AnnualVolume,
		AdjustedVolume,
		QuantityPerCuttingEdge,
		NumberOfCuttingEdges,
		'item' as itemType,partspecific,
		Consumable, 
		case 
			when toolbossStock is null then 0
			when toolbossStock = 0 then 0
			when toolbossStock = 1 then 1
			else 0
		end as toolbossStock,
		case
			when (Quantity=0) or (NumberofCuttingEdges =0) or (QuantityPerCuttingEdge=0) or
			(Quantity is null) or (NumberofCuttingEdges is null) or (QuantityPerCuttingEdge is null)
				then 0
			when (Consumable = 1)
				then 1/((QuantityPerCuttingEdge/cast( ti.quantity as numeric(19,8)))*NumberofCuttingEdges)
			when Consumable = 0 then 0.0
		end itemsPerPart, 
		case 
			when tt.PartSpecific = 0 and ti.Consumable = 1 then (Quantity * (AnnualVolume/12.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/12)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when ti.Consumable = 0 then ti.Quantity
		end MonthlyUsage,  
		case 
			when tt.PartSpecific = 0 and ti.Consumable = 1 then (ti.Quantity * (tm.AnnualVolume/365.0)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8)) 
			when tt.PartSpecific = 1 and ti.Consumable = 1  then (ti.Quantity * (tt.AdjustedVolume/365)) / cast((QuantityPerCuttingEdge * NumberOfCuttingEdges) as numeric(19,8))
			when ti.Consumable = 0 then ti.Quantity/30
		end DailyUsage  
		FROM [TOOLLIST ITEM] as ti 
		-- when a tool gets deleted the toollist item remains?
		inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
		INNER JOIN 
		(
			-- these are the toollist which are added to the toolbosses
			select tm.* 
			from
			btDistinctToolLists tb
			inner join
			[ToolList Master] tm
			on tb.ProcessId=tm.ProcessID
			--731
		) as tm 
		ON tt.PROCESSID = tm.PROCESSID 
		--30432
	--32571
	)lv1
	inner join 
	btDistinctToolLists tl
	on lv1.ProcessID=tl.processid
	--32571
)lv2
-- drop items that are not in the crib
inner join
toolitems ti
on lv2.itemNumber=ti.itemnumber
--32438]]></view_script>
			<column name="partNumber" type="nvarchar" />
			<column name="tlDescription" type="nvarchar" />
			<column name="OriginalProcessID" type="int" />
			<column name="processid" type="int" />
			<column name="itemNumber" type="nvarchar" />
			<column name="ToolID" type="int" />
			<column name="ttpid" type="int" />
			<column name="toolNumber" type="int" />
			<column name="OpDescription" type="nvarchar" />
			<column name="itemid" type="int" />
			<column name="tooltype" type="nvarchar" />
			<column name="tooldescription" type="nvarchar" />
			<column name="Quantity" type="int" />
			<column name="AnnualVolume" type="int" />
			<column name="AdjustedVolume" type="int" />
			<column name="QuantityPerCuttingEdge" type="int" />
			<column name="NumberOfCuttingEdges" type="int" />
			<column name="itemType" type="varchar" />
			<column name="partspecific" type="bit" />
			<column name="Consumable" type="bit" />
			<column name="toolbossStock" type="int" />
			<column name="itemsPerPart" type="numeric" />
			<column name="MonthlyUsage" type="numeric" />
			<column name="DailyUsage" type="numeric" />
			<column name="itemClass" type="varchar" />
			<column name="UDFGLOBALTOOL" type="varchar" />
			<column name="cost" type="numeric" />
		</view>
		<view name="bvToolListsAssignedPN" >
			<view_script><![CDATA[create VIEW [dbo].[${name}]
AS
		-- Pick only one part number for each active and approved toollist
		select lv1.Originalprocessid,lv1.processid, 
			customer,partfamily,OperationDescription,descript,descr,subDescript,subDescr,partNumber 
		from
		(
			select * from bvListOfActiveApprovedToolLists
			-- 733  
		) lv1
		inner join
		(
			-- Engineering sometimes adds more than one part number on a tool list
			-- we must pick one and drop the rest.  Tool lists with multiple Part numbers
			-- will show up on the Multi PN Tool List report. 
			select  ProcessID, MAX(PartNumbers) AS PartNumber
			FROM   [ToolList PartNumbers]
			GROUP BY ProcessID
		) lv2
		on lv1.ProcessID = lv2.ProcessID
		-- tool lists with no part numbers assigned have been dropped
		--732]]></view_script>
			<column name="Originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="customer" type="nvarchar" />
			<column name="partfamily" type="nvarchar" />
			<column name="OperationDescription" type="nvarchar" />
			<column name="descript" type="nvarchar" />
			<column name="descr" type="nvarchar" />
			<column name="subDescript" type="nvarchar" />
			<column name="subDescr" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
		</view>
		<view name="bvToolListsInPlants" >
			<view_script><![CDATA[create VIEW [dbo].[${name}]
AS
	select lv1.Originalprocessid,lv1.processid, 
		lv1.customer,lv1.partfamily,lv1.OperationDescription,
		lv1.descript,lv1.descr,	
		lv1.subDescript,lv1.subDescr,
		lv1.partNumber,tp.Plant 

	from
	( 
		select * from bvToolListsAssignedPN
		--732
	) lv1
	INNER JOIN
	[ToolList Plant] AS tp 
	ON lv1.ProcessID = tp.ProcessID]]></view_script>
			<column name="Originalprocessid" type="int" />
			<column name="processid" type="int" />
			<column name="customer" type="nvarchar" />
			<column name="partfamily" type="nvarchar" />
			<column name="OperationDescription" type="nvarchar" />
			<column name="descript" type="nvarchar" />
			<column name="descr" type="nvarchar" />
			<column name="subDescript" type="nvarchar" />
			<column name="subDescr" type="nvarchar" />
			<column name="partNumber" type="nvarchar" />
			<column name="Plant" type="int" />
		</view>
		<view name="bvToolListsMultiPn" >
			<view_script><![CDATA[create view ${name}
as
	select bvTL.ProcessID,bvTL.descript,
		SUBSTRING(
			list.xmlDoc.value('.', 'varchar(max)'),
			3, 10000
		) AS PartNumbers,
		SUBSTRING(
			list2.xmlDoc.value('.', 'varchar(max)'),
			3, 10000
		) AS Plants
	from bvGetToolListsMultiPn bvTL
	cross apply(
		select ', '+ PN.PartNumbers as ListItem
		from 
		(
			select * from [ToolList PartNumbers]  
		) PN
		where bvTL.ProcessID=PN.ProcessID
		order by PN.PartNumbers
		for xml path(''), type
	) as list(xmlDoc)
	cross apply(
		select ', '+ Cast(Plant.Plant as varchar) as ListItem
		from 
		(
			select * from [ToolList Plant]  
		) Plant
		where bvTL.ProcessID=Plant.ProcessID
		order by Plant.Plant
		for xml path(''), type
	) as list2(xmlDoc)]]></view_script>
			<column name="ProcessID" type="int" />
			<column name="descript" type="nvarchar" />
			<column name="PartNumbers" type="varchar" />
			<column name="Plants" type="varchar" />
		</view>
		<procedure name="AllOtherUsage" id="Procedure_298" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[AllOtherUsage] 
-- Determine combined other tool list usage of this item 
-- sum up the list of MonthlyUsage's to determine how many of these items we need for all tool lists
-- except the old and new tool lists passed into procedure 
	@cmId nvarchar(50),
	@newProcId int,
	@oldProcId int,
	@result int OUTPUT
AS
BEGIN
SET NOCOUNT ON
Declare @nPc Integer
Declare @Pc Integer
Declare @nC Integer
--     4 items   -- ti.Quantity
--    --------
--     20 parts  -- (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
--     100       -- (tm.AnnualVolume / 12) = how many parts are needed per month
--     4 items       ? items    = MonthlyUsage
--     -------   X  ---------
--     20 parts     100 parts 
--   if 4 items are needed to make 20 parts then 20 items are needed to make 100 parts
-- 	 (ti.Quantity * (tm.AnnualVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
    
-- Not part specific  
-- consumable means the item has a tool life
select @nPc = sumMonthlyUsage 
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from (
SELECT 
(ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
as MonthlyUsage -- how many items are needed to make tm.AnnualVolume/12 parts
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where tt.PartSpecific = 0 and ti.Consumable = 1 and ti.CRIBTOOLID = @cmId
-- if a tool list is being revised there will be two tool lists in the database
-- only count the items in the original released one and make sure the tool
-- list is still in use 
AND tm.Obsolete = 0 and tm.RevOfProcessID = 0 and tm.Released = 1
AND ti.PROCESSID <> @newProcId AND ti.PROCESSID <> @oldProcId
) as usage
) as sumQ
-- part specific 
-- consumable
select @Pc = sumMonthlyUsage
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from
(
SELECT 
(ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
as MonthlyUsage -- how many items are needed to make tt.AdjustedVolume/12 parts
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where tt.PartSpecific = 1 and ti.Consumable = 1 and ti.CRIBTOOLID = @cmId 
AND tm.Obsolete = 0 and tm.RevOfProcessID = 0 and tm.Released = 1
AND ti.PROCESSID <> @newProcId AND ti.PROCESSID <> @oldProcId
) as usage
) as sumQ
-- not consumable means the item is not perishable and the quantity field represents the number of the item
-- we need on hand to cnc the part
-- monthly usage is a misnomer in this case
select @nC = sumMonthlyUsage
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from (
SELECT ti.Quantity as MonthlyUsage  
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where ti.Consumable = 0 and ti.CRIBTOOLID = @cmId 
AND tm.Obsolete = 0 and tm.RevOfProcessID = 0 and tm.Released = 1
AND ti.PROCESSID <> @newProcId AND ti.PROCESSID <> @oldProcId
) as usage
) as sumQ
set nocount off
Set @result = @nPc + @Pc + @nC
Select @result 
end
]]></string>
			<input_param name="@cmId" jt="12" type="nvarchar" />
			<input_param name="@newProcId" jt="4" type="int" />
			<input_param name="@oldProcId" jt="4" type="int" />
			<input_param name="@result" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CalcUsage" id="Procedure_560" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CalcUsage] 
-- Determine tool list usage of this item 
-- sum up the list of MonthlyUsage's to determine how many of these items 
-- we need for a specific tool list
	@cmId nvarchar(50),
	@procId int,
	@result int OUTPUT
AS
BEGIN
SET NOCOUNT ON
Declare @nPc Integer
Declare @Pc Integer
Declare @nC Integer
--     4 items   -- ti.Quantity
--    --------
--     20 parts  -- (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
--     100       -- (tm.AnnualVolume / 12) = how many parts are needed per month
--     4 items       ? items    = MonthlyUsage
--     -------   X  ---------
--     20 parts     100 parts 
--   if 4 items are needed to make 20 parts then 20 items are needed to make 100 parts
-- 	 (ti.Quantity * (tm.AnnualVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
    
-- Not part specific  
-- consumable means the item has a tool life
select @nPc = sumMonthlyUsage 
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from (
SELECT 
(ti.Quantity * (tm.AnnualVolume/12.0)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
as MonthlyUsage -- how many items are needed to make tm.AnnualVolume/12 parts
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where tt.PartSpecific = 0 and ti.Consumable = 1 and ti.CRIBTOOLID = @cmId 
AND ti.PROCESSID = @procId 
) as usage
) as sumQ
-- part specific 
-- consumable
select @Pc = sumMonthlyUsage
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from
(
SELECT 
(ti.Quantity * (tt.AdjustedVolume/12)) / (ti.QuantityPerCuttingEdge * ti.NumberOfCuttingEdges) 
as MonthlyUsage -- how many items are needed to make tt.AdjustedVolume/12 parts
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where tt.PartSpecific = 1 and ti.Consumable = 1 and ti.CRIBTOOLID = @cmId 
AND ti.PROCESSID = @procId 
) as usage
) as sumQ
-- not consumable means the item is not perishable and the quantity field represents the number of the item
-- we need on hand to cnc the part
-- monthly usage is a misnomer in this case
select @nC = sumMonthlyUsage
from (
SELECT   
 case 
	when sum(MonthlyUsage) is null then cast(0.0 as decimal(18,2)) 
	else ceiling(sum(MonthlyUsage))
  end as sumMonthlyUsage  
from (
SELECT ti.Quantity as MonthlyUsage  
FROM [TOOLLIST ITEM] as ti 
inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
INNER JOIN [TOOLLIST MASTER] as tm ON tt.PROCESSID = tm.PROCESSID 
where ti.Consumable = 0 and ti.CRIBTOOLID = @cmId 
AND ti.PROCESSID = @procId 
) as usage
) as sumQ
set nocount off
Set @result = @nPc + @Pc + @nC
Select @result 
end
]]></string>
			<input_param name="@cmId" jt="12" type="nvarchar" />
			<input_param name="@procId" jt="4" type="int" />
			<input_param name="@result" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyProcessForChanges" id="Procedure_db1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyProcessForChanges] 
	-- Add the parameters for the stored procedure here
	@oldPid Integer
AS
BEGIN
SET NOCOUNT ON
DECLARE @RC int
EXECUTE @RC = [dbo].[CopyProcessMaster] @oldPid
Declare @newPid Integer
Set @newPid = (SELECT max(ProcessID) FROM [TOOLLIST MASTER]) 
EXECUTE @RC = [dbo].[CopyToolListPlants] @oldPid,@newPid
EXECUTE @RC = [dbo].[CopyToolListPartNumbers] @oldPid,@newPid
EXECUTE @RC = [dbo].[CopyToolListMisc] @oldPid,@newPid 
EXECUTE @RC = [dbo].[CopyToolListFixture] @oldPid,@newPid 
EXECUTE @RC = [dbo].[CopyToolListRev] @oldPid,@newPid
EXECUTE @RC = [dbo].[CopyToolListToolsAndItems] @oldPid,@newPid
set nocount off
select processid,itemId, toolId, case when ItemImage is null then 0 else 1 end as itemImage from [toollist item] where  processid = @newPid
END
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyProcessMaster" id="Procedure_c92" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyProcessMaster] 
	-- Add the parameters for the stored procedure here
	@pid int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	insert into [ToolList Master] select 
			[PartFamily]
           ,[OperationNumber]
           ,[OperationDescription]
           ,[Obsolete]
           ,[Customer]
           ,[AnnualVolume]
           ,[Released]
           ,[MultiTurret]
           ,@pid
           ,0
           ,[OriginalProcessID]
           ,[FixtureDrawing] from [ToolList Master] where ProcessID=@pid;
END
]]></string>
			<input_param name="@pid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListFixture" id="Procedure_1fc3" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListFixture] 
	-- Add the parameters for the stored procedure here
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
insert into [ToolList Fixture] 
SELECT @newPid
      ,[Manufacturer]
      ,[ToolType]
      ,[ToolDescription]
      ,[AdditionalNotes]
      ,[Quantity]
      ,[CribToolID]
      ,[DetailNumber]
      ,[ToolbossStock]
  FROM [ToolList Fixture] WHERE PROCESSID = @oldPid
end
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListMisc" id="Procedure_2645" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListMisc] 
	-- Add the parameters for the stored procedure here
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
insert into [ToolList Misc] 
SELECT @newPid
      ,[Manufacturer]
      ,[ToolType]
      ,[ToolDescription]
      ,[Consumable]
      ,[QuantityPerCuttingEdge]
      ,[AdditionalNotes]
      ,[NumberofCuttingEdges]
      ,[Quantity]
      ,[CribToolID]
      ,[ToolbossStock]
  FROM [ToolList Misc] WHERE PROCESSID = @oldPid
end
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListPartNumbers" id="Procedure_18d8" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListPartNumbers] 
	-- Add the parameters for the stored procedure here
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
insert into [ToolList PartNumbers] SELECT @newPid,PartNumbers FROM [TOOLLIST PARTNUMBERS] WHERE PROCESSID = @oldPid
end
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListPlants" id="Procedure_1dba" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListPlants] 
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
insert into [ToolList Plant] SELECT @newPid,plant FROM [TOOLLIST PLANT] WHERE PROCESSID = @oldPid
end
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListRev" id="Procedure_1632" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListRev] 
	-- Add the parameters for the stored procedure here
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
insert into [ToolList Rev] 
SELECT @newPid
      ,[Revision]
      ,[Revision Description]
      ,[Revision Date]
      ,[Revision By]
  FROM [ToolList Rev] WHERE PROCESSID = @oldPid
end
]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="CopyToolListToolsAndItems" id="Procedure_22fa" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[CopyToolListToolsAndItems] 
	@oldPid Integer,
	@newPid Integer
AS
BEGIN
SET NOCOUNT ON
--DECLARE @oldPid Integer
--set @oldPid = 81
--DECLARE @newPid Integer
--set @newPid = 84
DECLARE @vToolID Integer
DECLARE @vProcessID Integer
DECLARE @vToolNumber Integer
DECLARE @vOpDescription nvarchar(75)
DECLARE @vAlternate bit
DECLARE @vPartSpecific bit
DECLARE @vAdjustedVolume Integer
DECLARE @vToolOrder Integer
DECLARE @vTurret char(1)
DECLARE @vToolLength decimal(18,3)
DECLARE @vOffsetNumber Integer
DECLARE @newToolId Integer
DECLARE @newItemId Integer
DECLARE db_cursor CURSOR FOR  
SELECT * 
  FROM [dbo].[ToolList Tool] WHERE PROCESSID = @oldPid
OPEN db_cursor   
FETCH NEXT FROM db_cursor INTO  
	   @vToolID
      ,@vProcessID
      ,@vToolNumber
      ,@vOpDescription
      ,@vAlternate
      ,@vPartSpecific
      ,@vAdjustedVolume
      ,@vToolOrder
      ,@vTurret
      ,@vToolLength
      ,@vOffsetNumber
WHILE @@FETCH_STATUS = 0   
BEGIN 
--insert 1 tool with new pid
INSERT INTO [TOOLLIST TOOL] SELECT 
      @newPid
      ,@vToolNumber
      ,@vOpDescription
      ,@vAlternate
      ,@vPartSpecific
      ,@vAdjustedVolume
      ,@vToolOrder
      ,@vTurret
      ,@vToolLength
      ,@vOffsetNumber
Set @newToolId = (SELECT IDENT_CURRENT ('TOOLLIST TOOL') AS Current_Identity) 
--insert a copy of all toollist items 
INSERT INTO [ToolList Item] SELECT 
      @newPid
      ,@newToolId
      ,[ToolType]
      ,[ToolDescription]
      ,[Manufacturer]
      ,[Consumable]
      ,[QuantityPerCuttingEdge]
      ,[AdditionalNotes]
      ,[NumberofCuttingEdges]
      ,[Quantity]
      ,[CribToolID]
      ,[Regrindable]
      ,[QtyPerRegrind]
      ,[NumOfRegrinds]
      ,[ParentItem]
      ,[ToolbossStock]
      ,[ItemImage]
  FROM [dbo].[ToolList Item]
WHERE ToolID = @vToolID
--Some tools may be specific to certain part numbers
INSERT INTO [TOOLLIST TOOLPARTNUMBER] SELECT 
       @newToolId
      ,[PartNumber]
  FROM [ToolList ToolPartNumber]
WHERE ToolID = @vToolID

   FETCH NEXT FROM db_cursor INTO 
	   @vToolID
      ,@vProcessID
      ,@vToolNumber
      ,@vOpDescription
      ,@vAlternate
      ,@vPartSpecific
      ,@vAdjustedVolume
      ,@vToolOrder
      ,@vTurret
      ,@vToolLength
      ,@vOffsetNumber
END   
CLOSE db_cursor   
DEALLOCATE db_cursor
End]]></string>
			<input_param name="@oldPid" jt="4" type="int" />
			<input_param name="@newPid" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="GetCNCState" id="Procedure_11bc" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[GetCNCState]
AS
begin
	SELECT * from cncstate 
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="GetToolItems" id="Procedure_2093" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE [dbo].[GetToolItems]
AS
begin
	SELECT * from toolitems 
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="MultiPN" id="Procedure_1c74" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE procedure [dbo].[MultiPN]
as
-- start lv 7  - 30 parts
select AddedDesc.Plant, AddedDesc.PartNumber, AddedDesc.Descr from (
-- start lv 6  - 30 parts
select AddedPlant.ProcessID, AddedPlant.Plant, AddedPlant.PartNumber, 
SUBSTRING(TLMaster.Customer + ' - ' + TLMaster.PartFamily + ' - ' + TLMaster.OperationDescription, 1, 70) AS Descr 
from (
-- start lv 5  - 30 parts
select TLPlant.ProcessID, TLPlant.Plant, AddedPN.PartNumber from (
-- start lv 4  - 30 parts
select PN.ProcessID, PN.PartNumbers as PartNumber from (
-- start lv 3  - 30 parts/6 process 
select PartNumberCnt, ProcessID from (
-- start lv 2 - 640 
select count(*) as PartNumberCnt, ProcessID from (
-- start lv 1 - 664
SELECT DISTINCT [ToolList Master].ProcessID, [ToolList PartNumbers].PartNumbers AS PartNumber 
FROM [ToolList Master] LEFT OUTER JOIN
     [ToolList PartNumbers] ON [ToolList Master].ProcessID = [ToolList PartNumbers].ProcessID
WHERE ([ToolList Master].Obsolete = 0) 
-- end lv 1
) as WithPN
group by processId
-- end lv 2
) as CntPN
where CntPN.PartNumberCnt > 1
-- end lv 3
) as MultiPN
left outer join [ToolList PartNumbers] as PN 
ON MultiPN.ProcessID = PN.ProcessID
-- end lv 4
) as AddedPN
left outer join [ToolList Plant] as TLPlant 
ON AddedPN.ProcessID = TLPlant.ProcessID
-- end lv 5
) as AddedPlant
left outer join [ToolList Master] as TLMaster 
ON AddedPlant.ProcessID = TLMaster.ProcessID
-- end lv 6
) as AddedDesc
group by AddedDesc.Plant, AddedDesc.PartNumber, AddedDesc.Descr
order by AddedDesc.Descr
-- end lv 7]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpDistinctToolListItems" id="Procedure_680" isSystem="false" params_known="y" >
			<string><![CDATA[--///////////////////////////////////////////////////////////////////////////////////
-- Generate Distinct ToolList table
--///////////////////////////////////////////////////////////////////////////////////
create PROCEDURE [dbo].[bpDistinctToolListItems] 
AS
BEGIN
	IF
	OBJECT_ID('btDistinctToolListItems') IS NOT NULL
		DROP TABLE btDistinctToolListItems
	select * 
	into btDistinctToolListItems
	from bvDistinctToollistItems
end
]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpDistinctToolLists" id="Procedure_1d6" isSystem="false" params_known="y" >
			<string><![CDATA[--///////////////////////////////////////////////////////////////////////////////////
-- Generate Distinct ToolList table
--///////////////////////////////////////////////////////////////////////////////////
create PROCEDURE [dbo].[bpDistinctToolLists] 
AS
BEGIN
	IF
	OBJECT_ID('btDistinctToolLists') IS NOT NULL
		DROP TABLE btDistinctToolLists
	select * 
	into btDistinctToolLists
	from bvDistinctToollists
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpGetTLReportAccuracy" id="Procedure_25ab" isSystem="false" params_known="y" >
			<string><![CDATA[create PROCEDURE [dbo].[bpGetTLReportAccuracy]   
AS
select count(*) ToolListsMultiPnCnt from bvGetToolListsMultiPn]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpGetToolBossItemListTBS0" id="Procedure_a54" isSystem="false" params_known="y" >
			<string><![CDATA[create proc [dbo].[bpGetToolBossItemListTBS0]
 @plant int
as
BEGIN
	SELECT     '$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, CribToolID AS item, '3' AS D_Item, plant
	FROM         dbo.bfToolListItemsInPlant(@plant)
	where toolbossStock = 0
	ORDER BY job, item
END]]></string>
			<input_param name="@plant" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpGetToolBossItemListTBS1" id="Procedure_1749" isSystem="false" params_known="y" >
			<string><![CDATA[create proc [dbo].[bpGetToolBossItemListTBS1]
 @plant int
as
BEGIN
	SELECT     '$ALL$' AS [User], originalprocessid AS Job, 'DEFAULT' AS Machine, '133' AS D_Consumer, CribToolID AS item, '3' AS D_Item, plant
	FROM         dbo.bfToolListItemsInPlant(@plant)
	where toolbossStock = 1
	ORDER BY job, item
END]]></string>
			<input_param name="@plant" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpGetToolBossJobList" id="Procedure_fb5" isSystem="false" params_known="y" >
			<string><![CDATA[create PROCEDURE [dbo].[bpGetToolBossJobList] 
	-- Add the parameters for the stored procedure here
	@plant int
AS
BEGIN
select * from bfGetToolBossJobList(@plant)
order by Descr
END]]></string>
			<input_param name="@plant" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpItemsPerPart" id="Procedure_2507" isSystem="false" params_known="y" >
			<string><![CDATA[--///////////////////////////////////////////////////////////////////////////////////
-- all toolops and the itemsPerPart multiplier for distinct partnumber,itemnumber pairs
--///////////////////////////////////////////////////////////////////////////////////
create PROCEDURE [dbo].[bpItemsPerPart] 
AS
BEGIN
	SET NOCOUNT ON
	IF
	OBJECT_ID('tempdb.dbo.#btToolOps') IS NOT NULL
		DROP TABLE #btToolOps
	IF
	OBJECT_ID('btItemsPerPart') IS NOT NULL
		DROP TABLE btItemsPerPart
	DECLARE
		  @allToolOps VARCHAR(max)
	select
		partNumber,
		itemNumber,
		itemsPerPart, 
		'<br>' +  tlDescription + ', ' + OpDescription + ', ' + tooldescription + 
		'<br>Quantity Per Tool:' + cast(Quantity as varchar(10)) +
		', Quantity Per Cutting Edge:' + cast(QuantityPerCuttingEdge as varchar(10)) +
		', Number Of Cutting Edges:' + cast(NumberOfCuttingEdges as varchar(10)) +
		'<br>Items Per Part:' + cast(cast(itemsPerPartPerTool as numeric(19,8)) as varchar(50)) as ToolOp
		, RowNum = ROW_NUMBER() OVER (PARTITION BY partNumber,itemNumber ORDER BY 1/0)
		, allToolOps = CAST(NULL AS VARCHAR(max))
	INTO #btToolOps
	from 
	(
		select tid.partNumber,tid.itemnumber,tid.itemsPerPart as itemsPerPartPerTool,
		tis.itemsPerPart,tlDescription,
		opDescription,tooldescription,monthlyUsage,
		itemType,Quantity,AnnualVolume,QuantityPerCuttingEdge,NumberOfCuttingEdges,
		tid.Consumable,PartSpecific,AdjustedVolume
		from 
		(
			select * from bvToolListItemsLv1
			where consumable = 1
			--8407
		)tid
		--32571
		inner join
		(
			--distinct partNumber,itemNumber
			select partNumber, itemNumber,consumable,
			sum(itemsPerPart) as itemsPerPart
			from bvToolListItemsLv1
			group by 
			partNumber, itemNumber,consumable
			having Consumable = 1 
			-- 7050
		) tis
		on
		tid.partNumber=tis.partNumber and
		tid.itemNumber=tis.itemNumber
		--8407
	) tops
	UPDATE #btToolOps
	SET 
		  @allToolOps = allToolOps =
			CASE WHEN RowNum = 1 
				THEN toolOp
				ELSE @allToolOps + '<br>' + toolOp 
			END
	select partNumber,itemNumber,itemsPerPart, 
		max(allToolOps) as toolOps
	into btItemsPerPart
	from #btToolOps
	group by partNumber,itemNumber,itemsPerPart
	-- 7050
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpObsToolListItems" id="Procedure_142f" isSystem="false" params_known="y" >
			<string><![CDATA[-------------------------------------------------
-- Obsolete ToolList items,misc,and fixture detail
-- grouped by item number 
-------------------------------------------------
create PROCEDURE [dbo].[bpObsToolListItems] 
AS
BEGIN
	SET NOCOUNT ON
IF
OBJECT_ID('dbo.btObsToolListItems') IS NOT NULL
	DROP TABLE btObsToolListItems
IF
OBJECT_ID('tempdb.dbo.#btObsOpDesc') IS NOT NULL
	DROP TABLE #btObsOpDesc
DECLARE
      @opDescList VARCHAR(max)
select 
	itemNumber,tlDescription,
	opDescription,tooldescription
    , RowNum = ROW_NUMBER() OVER (PARTITION BY itemNumber ORDER BY 1/0)
    , opDescList = CAST(NULL AS VARCHAR(max))
into #btObsOpDesc
from bvObsToolListItemsLv1
--12 sec

UPDATE #btObsOpDesc
SET 
      @opDescList = opDescList =
        CASE WHEN RowNum = 1 
            THEN tlDescription + ', ' + opDescription + ', '  + toolDescription
            ELSE @opDescList + '<br>' + tlDescription + ', ' + opDescription + ', '  + toolDescription 
        END
-- 14 sec
select 
      itemNumber
    , opDescList = MAX(opDescList) 
into btObsToolListItems
from #btObsOpDesc
GROUP BY itemNumber 
end
]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpToolListItems" id="Procedure_fb0" isSystem="false" params_known="y" >
			<string><![CDATA[-------------------------------------------------
-- Active ToolList items,misc,and fixture detail
-- grouped by item number 
-------------------------------------------------
create PROCEDURE [dbo].[bpToolListItems] 
AS
BEGIN
	SET NOCOUNT ON
IF
OBJECT_ID('dbo.btToolListItems') IS NOT NULL
	DROP TABLE btToolListItems
IF
OBJECT_ID('tempdb.dbo.#btOpDesc') IS NOT NULL
	DROP TABLE #btOpDesc
DECLARE
      @opDescList VARCHAR(max)
select 
	itemNumber,tlDescription,
	opDescription,tooldescription
    , RowNum = ROW_NUMBER() OVER (PARTITION BY itemNumber ORDER BY 1/0)
    , opDescList = CAST(NULL AS VARCHAR(max))
into #btOpDesc
from bvToolListItemsLv1
--12 sec

UPDATE #btOpDesc
SET 
      @opDescList = opDescList =
        CASE WHEN RowNum = 1 
            THEN tlDescription + ', ' + opDescription + ', '  + toolDescription
            ELSE @opDescList + '<br>' + tlDescription + ', ' + opDescription + ', '  + toolDescription 
        END
-- 14 sec
select 
      itemNumber
    , opDescList = MAX(opDescList) 
into btToolListItems
from #btOpDesc
GROUP BY itemNumber 
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpToolListItemsLv2" id="Procedure_789" isSystem="false" params_known="y" >
			<string><![CDATA[---------------------------------------------
-- simplier version
-- ToolList items that are in plants with Tool 
-- Ops description list
-----------------------------------------------
create Procedure [dbo].[bpToolListItemsLv2] 
as
BEGIN
	SET NOCOUNT ON
	IF
		OBJECT_ID('tempdb.dbo.#btToolOps') IS NOT NULL
		DROP TABLE #btToolOps
	IF
		OBJECT_ID('ToolListItems') IS NOT NULL
		DROP TABLE ToolListItems
	DECLARE
		@allToolOps VARCHAR(max)
	select ti.processId,ti.CribToolID as itemNumber,ti.tooldescription,
	tt.OpDescription,
	(tm.Customer + ' - ' + tm.PartFamily + ' - ' + tm.OperationDescription) tlDescription
	, RowNum = ROW_NUMBER() OVER (PARTITION BY ti.processid,ti.CribToolId ORDER BY 1/0)
	, allToolOps = CAST(NULL AS VARCHAR(max))
	INTO #btToolOps
	FROM [TOOLLIST ITEM] as ti 
	-- when a tool gets deleted the toollist item remains?
	-- we don't want the toollist item if it is not on a toollist tool
	inner join [TOOLLIST TOOL] as tt on ti.toolid=tt.toolid
	inner join [TOOLLIST Master] as tm on tm.ProcessID=ti.ProcessID
	--35080
		update #btToolOps
			set @allToolOps = allToolOps =
				case 
					when RowNum = 1 then tlDescription + ', ' + OpDescription + ', ' + tooldescription
					else @allToolOps + '<br>' + tlDescription + ', ' + OpDescription + ', ' + tooldescription
				end
		select lv1.*,lv2.allToolOps
		into ToolListItems
		from
		(
			select distinct originalprocessid,processid, partNumber, itemNumber
			from bvToolListItemsInPlants 
			--28467
		)lv1
		inner join
		(
			select processId,itemNumber,max(allToolOps) allToolOps
			from 
			#btToolOps
			group by ProcessID,itemNumber
			--27630
		)lv2
		on lv1.processid = lv2.ProcessID
		and lv1.itemNumber = lv2.itemNumber
		--24208
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="bpToolListPartItems" id="Procedure_185" isSystem="false" params_known="y" >
			<string><![CDATA[--///////////////////////////////////////////////////////////////////////////////////
-- all toolops and the itemsPerPart multiplier for distinct partnumber,itemnumber pairs
--///////////////////////////////////////////////////////////////////////////////////
create PROCEDURE [dbo].[bpToolListPartItems] 
AS
BEGIN
	SET NOCOUNT ON
	IF
	OBJECT_ID('tempdb.dbo.#btToolOps') IS NOT NULL
		DROP TABLE #btToolOps
	IF
	OBJECT_ID('btToolListPartItems') IS NOT NULL
		DROP TABLE btToolListPartItems
	DECLARE
		  @allToolOps VARCHAR(max)
	select
		partNumber,
		itemNumber,
		itemsPerPart, 
		'<br>' +  tlDescription + ', ' + OpDescription + ', ' + tooldescription + 
		'<br>Quantity Per Tool:' + cast(Quantity as varchar(10)) +
		', Quantity Per Cutting Edge:' + cast(QuantityPerCuttingEdge as varchar(10)) +
		', Number Of Cutting Edges:' + cast(NumberOfCuttingEdges as varchar(10)) +
		'<br>Items Per Part:' + cast(cast(itemsPerPartPerTool as numeric(19,8)) as varchar(50)) as ToolOp
		, RowNum = ROW_NUMBER() OVER (PARTITION BY partNumber,itemNumber ORDER BY 1/0)
		, allToolOps = CAST(NULL AS VARCHAR(max))
	INTO #btToolOps
	from 
	(
		select tid.partNumber,tid.itemnumber,tid.itemsPerPart as itemsPerPartPerTool,
		tis.itemsPerPart,tlDescription,
		opDescription,tooldescription,monthlyUsage,
		itemType,Quantity,AnnualVolume,QuantityPerCuttingEdge,NumberOfCuttingEdges,
		tid.Consumable,PartSpecific,AdjustedVolume
		from 
		(
			select * from bvToolListItemsLv1
			where consumable = 1
			--8407
		)tid
		--32571
		inner join
		(
			--distinct partNumber,itemNumber
			select partNumber, itemNumber,consumable,
			sum(itemsPerPart) as itemsPerPart
			from bvToolListItemsLv1
			group by 
			partNumber, itemNumber,consumable
			having Consumable = 1 
			-- 7050
		) tis
		on
		tid.partNumber=tis.partNumber and
		tid.itemNumber=tis.itemNumber
		--8407
	) tops
	UPDATE #btToolOps
	SET 
		  @allToolOps = allToolOps =
			CASE WHEN RowNum = 1 
				THEN toolOp
				ELSE @allToolOps + '<br>' + toolOp 
			END
	select partNumber,itemNumber,itemsPerPart, 
		max(allToolOps) as toolOps
	into btToolListPartItems
	from #btToolOps
	group by partNumber,itemNumber,itemsPerPart
	-- 7050
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_addtosourcecontrol" id="Procedure_18d6" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_addtosourcecontrol
    @vchSourceSafeINI varchar(255) = '',
    @vchProjectName   varchar(255) ='',
    @vchComment       varchar(255) ='',
    @vchLoginName     varchar(255) ='',
    @vchPassword      varchar(255) =''
as
set nocount on
declare @iReturn int
declare @iObjectId int
select @iObjectId = 0
declare @iStreamObjectId int
select @iStreamObjectId = 0
declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'
declare @vchDatabaseName varchar(255)
select @vchDatabaseName = db_name()
declare @iReturnValue int
select @iReturnValue = 0
declare @iPropertyObjectId int
declare @vchParentId varchar(255)
declare @iObjectCount int
select @iObjectCount = 0
    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 GOTO E_OAError

    /* Create Project in SS */
    exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
											'AddProjectToSourceSafe',
											NULL,
											@vchSourceSafeINI,
											@vchProjectName output,
											@@SERVERNAME,
											@vchDatabaseName,
											@vchLoginName,
											@vchPassword,
											@vchComment

    if @iReturn <> 0 GOTO E_OAError
    /* Set Database Properties */
    begin tran SetProperties
    /* add high level object */
    exec @iPropertyObjectId = dbo.dt_adduserobject_vcs 'VCSProjectID'
    select @vchParentId = CONVERT(varchar(255),@iPropertyObjectId)
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSProjectID', @vchParentId , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSProject' , @vchProjectName , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSourceSafeINI' , @vchSourceSafeINI , NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSQLServer', @@SERVERNAME, NULL
    exec dbo.dt_setpropertybyid @iPropertyObjectId, 'VCSSQLDatabase', @vchDatabaseName, NULL
    if @@error <> 0 GOTO E_General_Error
    commit tran SetProperties
    
    select @iObjectCount = 0;
CleanUp:
    select @vchProjectName
    select @iObjectCount
    return
E_General_Error:
    /* this is an all or nothing.  No specific error messages */
    goto CleanUp
E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    goto CleanUp
]]></string>
			<input_param name="@vchSourceSafeINI" jt="12" type="varchar" />
			<input_param name="@vchProjectName" jt="12" type="varchar" />
			<input_param name="@vchComment" jt="12" type="varchar" />
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_addtosourcecontrol_u" id="Procedure_a71" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_addtosourcecontrol_u
    @vchSourceSafeINI nvarchar(255) = '',
    @vchProjectName   nvarchar(255) ='',
    @vchComment       nvarchar(255) ='',
    @vchLoginName     nvarchar(255) ='',
    @vchPassword      nvarchar(255) =''
as
	-- This procedure should no longer be called;  dt_addtosourcecontrol should be called instead.
	-- Calls are forwarded to dt_addtosourcecontrol to maintain backward compatibility
	set nocount on
	exec dbo.dt_addtosourcecontrol 
		@vchSourceSafeINI, 
		@vchProjectName, 
		@vchComment, 
		@vchLoginName, 
		@vchPassword
]]></string>
			<input_param name="@vchSourceSafeINI" jt="12" type="nvarchar" />
			<input_param name="@vchProjectName" jt="12" type="nvarchar" />
			<input_param name="@vchComment" jt="12" type="nvarchar" />
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_adduserobject" id="Procedure_12c8" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Add an object to the dtproperties table
*/
create procedure dbo.dt_adduserobject
as
	set nocount on
	/*
	** Create the user object if it does not exist already
	*/
	begin transaction
		insert dbo.dtproperties (property) VALUES ('DtgSchemaOBJECT')
		update dbo.dtproperties set objectid=@@identity 
			where id=@@identity and property='DtgSchemaOBJECT'
	commit
	return @@identity]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_adduserobject_vcs" id="Procedure_6f8" isSystem="false" params_known="y" >
			<string><![CDATA[create procedure dbo.dt_adduserobject_vcs
    @vchProperty varchar(64)
as
set nocount on
declare @iReturn int
    /*
    ** Create the user object if it does not exist already
    */
    begin transaction
        select @iReturn = objectid from dbo.dtproperties where property = @vchProperty
        if @iReturn IS NULL
        begin
            insert dbo.dtproperties (property) VALUES (@vchProperty)
            update dbo.dtproperties set objectid=@@identity
                    where id=@@identity and property=@vchProperty
            select @iReturn = @@identity
        end
    commit
    return @iReturn
]]></string>
			<input_param name="@vchProperty" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_checkinobject" id="Procedure_2019" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_checkinobject
    @chObjectType  char(4),
    @vchObjectName varchar(255),
    @vchComment    varchar(255)='',
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255)='',
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0,   /* 0 => AddFile, 1 => CheckIn */
    @txStream1     Text = '', /* drop stream   */ /* There is a bug that if items are NULL they do not pass to OLE servers */
    @txStream2     Text = '', /* create stream */
    @txStream3     Text = ''  /* grant stream  */

as
	set nocount on
	declare @iReturn int
	declare @iObjectId int
	select @iObjectId = 0
	declare @iStreamObjectId int
	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'
	declare @iPropertyObjectId int
	select @iPropertyObjectId  = 0
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    declare @iReturnValue	  int
    declare @pos			  int
    declare @vchProcLinePiece varchar(255)
    
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT
    if @chObjectType = 'PROC'
    begin
        if @iActionFlag = 1
        begin
            /* Procedure Can have up to three streams
            Drop Stream, Create Stream, GRANT stream */
            begin tran compile_all
            /* try to compile the streams */
            exec (@txStream1)
            if @@error <> 0 GOTO E_Compile_Fail
            exec (@txStream2)
            if @@error <> 0 GOTO E_Compile_Fail
            exec (@txStream3)
            if @@error <> 0 GOTO E_Compile_Fail
        end
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        
        if @iActionFlag = 1
        begin
            
            declare @iStreamLength int
			
			select @pos=1
			select @iStreamLength = datalength(@txStream2)
			
			if @iStreamLength > 0
			begin
			
				while @pos < @iStreamLength
				begin
						
					select @vchProcLinePiece = substring(@txStream2, @pos, 255)
					
					exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'AddStream', @iReturnValue OUT, @vchProcLinePiece
            		if @iReturn <> 0 GOTO E_OAError
            		
					select @pos = @pos + 255
					
				end
            
				exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
														'CheckIn_StoredProcedure',
														NULL,
														@sProjectName = @vchProjectName,
														@sSourceSafeINI = @vchSourceSafeINI,
														@sServerName = @vchServerName,
														@sDatabaseName = @vchDatabaseName,
														@sObjectName = @vchObjectName,
														@sComment = @vchComment,
														@sLoginName = @vchLoginName,
														@sPassword = @vchPassword,
														@iVCSFlags = @iVCSFlags,
														@iActionFlag = @iActionFlag,
														@sStream = ''
                                        
			end
        end
        else
        begin
        
            select colid, text into #ProcLines
            from syscomments
            where id = object_id(@vchObjectName)
            order by colid
            declare @iCurProcLine int
            declare @iProcLines int
            select @iCurProcLine = 1
            select @iProcLines = (select count(*) from #ProcLines)
            while @iCurProcLine <= @iProcLines
            begin
                select @pos = 1
                declare @iCurLineSize int
                select @iCurLineSize = len((select text from #ProcLines where colid = @iCurProcLine))
                while @pos <= @iCurLineSize
                begin                
                    select @vchProcLinePiece = convert(varchar(255),
                        substring((select text from #ProcLines where colid = @iCurProcLine),
                                  @pos, 255 ))
                    exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'AddStream', @iReturnValue OUT, @vchProcLinePiece
                    if @iReturn <> 0 GOTO E_OAError
                    select @pos = @pos + 255                  
                end
                select @iCurProcLine = @iCurProcLine + 1
            end
            drop table #ProcLines
            exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
													'CheckIn_StoredProcedure',
													NULL,
													@sProjectName = @vchProjectName,
													@sSourceSafeINI = @vchSourceSafeINI,
													@sServerName = @vchServerName,
													@sDatabaseName = @vchDatabaseName,
													@sObjectName = @vchObjectName,
													@sComment = @vchComment,
													@sLoginName = @vchLoginName,
													@sPassword = @vchPassword,
													@iVCSFlags = @iVCSFlags,
													@iActionFlag = @iActionFlag,
													@sStream = ''
        end
        if @iReturn <> 0 GOTO E_OAError
        if @iActionFlag = 1
        begin
            commit tran compile_all
            if @@error <> 0 GOTO E_Compile_Fail
        end
    end
CleanUp:
	return
E_Compile_Fail:
	declare @lerror int
	select @lerror = @@error
	rollback tran compile_all
	RAISERROR (@lerror,16,-1)
	goto CleanUp
E_OAError:
	if @iActionFlag = 1 rollback tran compile_all
	exec dbo.dt_displayoaerror @iObjectId, @iReturn
	goto CleanUp
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="varchar" />
			<input_param name="@vchComment" jt="12" type="varchar" />
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<input_param name="@iVCSFlags" jt="4" type="int" />
			<input_param name="@iActionFlag" jt="4" type="int" />
			<input_param name="@txStream1" jt="2005" type="text" />
			<input_param name="@txStream2" jt="2005" type="text" />
			<input_param name="@txStream3" jt="2005" type="text" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_checkinobject_u" id="Procedure_11b4" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_checkinobject_u
    @chObjectType  char(4),
    @vchObjectName nvarchar(255),
    @vchComment    nvarchar(255)='',
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255)='',
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0,   /* 0 => AddFile, 1 => CheckIn */
    @txStream1     text = '',  /* drop stream   */ /* There is a bug that if items are NULL they do not pass to OLE servers */
    @txStream2     text = '',  /* create stream */
    @txStream3     text = ''   /* grant stream  */
as	
	-- This procedure should no longer be called;  dt_checkinobject should be called instead.
	-- Calls are forwarded to dt_checkinobject to maintain backward compatibility.
	set nocount on
	exec dbo.dt_checkinobject
		@chObjectType,
		@vchObjectName,
		@vchComment,
		@vchLoginName,
		@vchPassword,
		@iVCSFlags,
		@iActionFlag,   
		@txStream1,		
		@txStream2,		
		@txStream3		
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="nvarchar" />
			<input_param name="@vchComment" jt="12" type="nvarchar" />
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<input_param name="@iVCSFlags" jt="4" type="int" />
			<input_param name="@iActionFlag" jt="4" type="int" />
			<input_param name="@txStream1" jt="2005" type="text" />
			<input_param name="@txStream2" jt="2005" type="text" />
			<input_param name="@txStream3" jt="2005" type="text" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_checkoutobject" id="Procedure_242d" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_checkoutobject
    @chObjectType  char(4),
    @vchObjectName varchar(255),
    @vchComment    varchar(255),
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255),
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0/* 0 => Checkout, 1 => GetLatest, 2 => UndoCheckOut */
as
	set nocount on
	declare @iReturn int
	declare @iObjectId int
	select @iObjectId =0
	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'
	declare @iReturnValue int
	select @iReturnValue = 0
	declare @vchTempText varchar(255)
	/* this is for our strings */
	declare @iStreamObjectId int
	select @iStreamObjectId = 0
    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT
    if @chObjectType = 'PROC'
    begin
        /* Procedure Can have up to three streams
           Drop Stream, Create Stream, GRANT stream */
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'CheckOut_StoredProcedure',
												NULL,
												@sProjectName = @vchProjectName,
												@sSourceSafeINI = @vchSourceSafeINI,
												@sObjectName = @vchObjectName,
												@sServerName = @vchServerName,
												@sDatabaseName = @vchDatabaseName,
												@sComment = @vchComment,
												@sLoginName = @vchLoginName,
												@sPassword = @vchPassword,
												@iVCSFlags = @iVCSFlags,
												@iActionFlag = @iActionFlag
        if @iReturn <> 0 GOTO E_OAError

        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        create table #commenttext (id int identity, sourcecode varchar(255))

        select @vchTempText = 'STUB'
        while @vchTempText is not null
        begin
            exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'GetStream', @iReturnValue OUT, @vchTempText OUT
            if @iReturn <> 0 GOTO E_OAError
            
            if (@vchTempText = '') set @vchTempText = null
            if (@vchTempText is not null) insert into #commenttext (sourcecode) select @vchTempText
        end
        select 'VCS'=sourcecode from #commenttext order by id
        select 'SQL'=text from syscomments where id = object_id(@vchObjectName) order by colid
    end
CleanUp:
    return
E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="varchar" />
			<input_param name="@vchComment" jt="12" type="varchar" />
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<input_param name="@iVCSFlags" jt="4" type="int" />
			<input_param name="@iActionFlag" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_checkoutobject_u" id="Procedure_1e4d" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_checkoutobject_u
    @chObjectType  char(4),
    @vchObjectName nvarchar(255),
    @vchComment    nvarchar(255),
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255),
    @iVCSFlags     int = 0,
    @iActionFlag   int = 0/* 0 => Checkout, 1 => GetLatest, 2 => UndoCheckOut */
as
	-- This procedure should no longer be called;  dt_checkoutobject should be called instead.
	-- Calls are forwarded to dt_checkoutobject to maintain backward compatibility.
	set nocount on
	exec dbo.dt_checkoutobject
		@chObjectType,  
		@vchObjectName, 
		@vchComment,    
		@vchLoginName,  
		@vchPassword,  
		@iVCSFlags,    
		@iActionFlag 
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="nvarchar" />
			<input_param name="@vchComment" jt="12" type="nvarchar" />
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<input_param name="@iVCSFlags" jt="4" type="int" />
			<input_param name="@iActionFlag" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_displayoaerror" id="Procedure_18c1" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE dbo.dt_displayoaerror
    @iObject int,
    @iresult int
as
set nocount on
declare @vchOutput      varchar(255)
declare @hr             int
declare @vchSource      varchar(255)
declare @vchDescription varchar(255)
    exec @hr = master.dbo.sp_OAGetErrorInfo @iObject, @vchSource OUT, @vchDescription OUT
    select @vchOutput = @vchSource + ': ' + @vchDescription
    raiserror (@vchOutput,16,-1)
    return
]]></string>
			<input_param name="@iObject" jt="4" type="int" />
			<input_param name="@iresult" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_displayoaerror_u" id="Procedure_cbb" isSystem="false" params_known="y" >
			<string><![CDATA[CREATE PROCEDURE dbo.dt_displayoaerror_u
    @iObject int,
    @iresult int
as
	-- This procedure should no longer be called;  dt_displayoaerror should be called instead.
	-- Calls are forwarded to dt_displayoaerror to maintain backward compatibility.
	set nocount on
	exec dbo.dt_displayoaerror
		@iObject,
		@iresult
]]></string>
			<input_param name="@iObject" jt="4" type="int" />
			<input_param name="@iresult" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_droppropertiesbyid" id="Procedure_1df7" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Drop one or all the associated properties of an object or an attribute 
**
**	dt_dropproperties objid, null or '' -- drop all properties of the object itself
**	dt_dropproperties objid, property -- drop the property
*/
create procedure dbo.dt_droppropertiesbyid
	@id int,
	@property varchar(64)
as
	set nocount on
	if (@property is null) or (@property = '')
		delete from dbo.dtproperties where objectid=@id
	else
		delete from dbo.dtproperties 
			where objectid=@id and property=@property
]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_dropuserobjectbyid" id="Procedure_3b8" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Drop an object from the dbo.dtproperties table
*/
create procedure dbo.dt_dropuserobjectbyid
	@id int
as
	set nocount on
	delete from dbo.dtproperties where objectid=@id]]></string>
			<input_param name="@id" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_generateansiname" id="Procedure_163" isSystem="false" params_known="y" >
			<string><![CDATA[/* 
**	Generate an ansi name that is unique in the dtproperties.value column 
*/ 
create procedure dbo.dt_generateansiname(@name varchar(255) output) 
as 
	declare @prologue varchar(20) 
	declare @indexstring varchar(20) 
	declare @index integer 
 
	set @prologue = 'MSDT-A-' 
	set @index = 1 
 
	while 1 = 1 
	begin 
		set @indexstring = cast(@index as varchar(20)) 
		set @name = @prologue + @indexstring 
		if not exists (select value from dtproperties where value = @name) 
			break 
		 
		set @index = @index + 1 
 
		if (@index = 10000) 
			goto TooMany 
	end 
 
Leave: 
 
	return 
 
TooMany: 
 
	set @name = 'DIAGRAM' 
	goto Leave ]]></string>
			<input_param name="@name" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getobjwithprop" id="Procedure_102c" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Retrieve the owner object(s) of a given property
*/
create procedure dbo.dt_getobjwithprop
	@property varchar(30),
	@value varchar(255)
as
	set nocount on
	if (@property is null) or (@property = '')
	begin
		raiserror('Must specify a property name.',-1,-1)
		return (1)
	end
	if (@value is null)
		select objectid id from dbo.dtproperties
			where property=@property
	else
		select objectid id from dbo.dtproperties
			where property=@property and value=@value]]></string>
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@value" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getobjwithprop_u" id="Procedure_1d8e" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Retrieve the owner object(s) of a given property
*/
create procedure dbo.dt_getobjwithprop_u
	@property varchar(30),
	@uvalue nvarchar(255)
as
	set nocount on
	if (@property is null) or (@property = '')
	begin
		raiserror('Must specify a property name.',-1,-1)
		return (1)
	end
	if (@uvalue is null)
		select objectid id from dbo.dtproperties
			where property=@property
	else
		select objectid id from dbo.dtproperties
			where property=@property and uvalue=@uvalue]]></string>
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@uvalue" jt="12" type="nvarchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getpropertiesbyid" id="Procedure_329" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Retrieve properties by id's
**
**	dt_getproperties objid, null or '' -- retrieve all properties of the object itself
**	dt_getproperties objid, property -- retrieve the property specified
*/
create procedure dbo.dt_getpropertiesbyid
	@id int,
	@property varchar(64)
as
	set nocount on
	if (@property is null) or (@property = '')
		select property, version, value, lvalue
			from dbo.dtproperties
			where  @id=objectid
	else
		select property, version, value, lvalue
			from dbo.dtproperties
			where  @id=objectid and @property=property]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getpropertiesbyid_u" id="Procedure_1605" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	Retrieve properties by id's
**
**	dt_getproperties objid, null or '' -- retrieve all properties of the object itself
**	dt_getproperties objid, property -- retrieve the property specified
*/
create procedure dbo.dt_getpropertiesbyid_u
	@id int,
	@property varchar(64)
as
	set nocount on
	if (@property is null) or (@property = '')
		select property, version, uvalue, lvalue
			from dbo.dtproperties
			where  @id=objectid
	else
		select property, version, uvalue, lvalue
			from dbo.dtproperties
			where  @id=objectid and @property=property]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getpropertiesbyid_vcs" id="Procedure_1a4a" isSystem="false" params_known="y" >
			<string><![CDATA[create procedure dbo.dt_getpropertiesbyid_vcs
    @id       int,
    @property varchar(64),
    @value    varchar(255) = NULL OUT
as
    set nocount on
    select @value = (
        select value
                from dbo.dtproperties
                where @id=objectid and @property=property
                )
]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@value" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_getpropertiesbyid_vcs_u" id="Procedure_b24" isSystem="false" params_known="y" >
			<string><![CDATA[create procedure dbo.dt_getpropertiesbyid_vcs_u
    @id       int,
    @property varchar(64),
    @value    nvarchar(255) = NULL OUT
as
    -- This procedure should no longer be called;  dt_getpropertiesbyid_vcsshould be called instead.
	-- Calls are forwarded to dt_getpropertiesbyid_vcs to maintain backward compatibility.
	set nocount on
    exec dbo.dt_getpropertiesbyid_vcs
		@id,
		@property,
		@value output
]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@value" jt="12" type="nvarchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_isundersourcecontrol" id="Procedure_573" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_isundersourcecontrol
    @vchLoginName varchar(255) = '',
    @vchPassword  varchar(255) = '',
    @iWhoToo      int = 0 /* 0 => Just check project; 1 => get list of objs */
as
	set nocount on
	declare @iReturn int
	declare @iObjectId int
	select @iObjectId = 0
	declare @VSSGUID varchar(100)
	select @VSSGUID = 'SQLVersionControl.VCS_SQL'
	declare @iReturnValue int
	select @iReturnValue = 0
	declare @iStreamObjectId int
	select @iStreamObjectId   = 0
	declare @vchTempText varchar(255)
    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT
    if (@vchProjectName = '')	set @vchProjectName		= null
    if (@vchSourceSafeINI = '') set @vchSourceSafeINI	= null
    if (@vchServerName = '')	set @vchServerName		= null
    if (@vchDatabaseName = '')	set @vchDatabaseName	= null
    
    if (@vchProjectName is null) or (@vchSourceSafeINI is null) or (@vchServerName is null) or (@vchDatabaseName is null)
    begin
        RAISERROR('Not Under Source Control',16,-1)
        return
    end
    if @iWhoToo = 1
    begin
        /* Get List of Procs in the project */
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'GetListOfObjects',
												NULL,
												@vchProjectName,
												@vchSourceSafeINI,
												@vchServerName,
												@vchDatabaseName,
												@vchLoginName,
												@vchPassword
        if @iReturn <> 0 GOTO E_OAError
        exec @iReturn = master.dbo.sp_OAGetProperty @iObjectId, 'GetStreamObject', @iStreamObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        create table #ObjectList (id int identity, vchObjectlist varchar(255))
        select @vchTempText = 'STUB'
        while @vchTempText is not null
        begin
            exec @iReturn = master.dbo.sp_OAMethod @iStreamObjectId, 'GetStream', @iReturnValue OUT, @vchTempText OUT
            if @iReturn <> 0 GOTO E_OAError
            
            if (@vchTempText = '') set @vchTempText = null
            if (@vchTempText is not null) insert into #ObjectList (vchObjectlist ) select @vchTempText
        end
        select vchObjectlist from #ObjectList order by id
    end
CleanUp:
    return
E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    goto CleanUp
]]></string>
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<input_param name="@iWhoToo" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_isundersourcecontrol_u" id="Procedure_135" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_isundersourcecontrol_u
    @vchLoginName nvarchar(255) = '',
    @vchPassword  nvarchar(255) = '',
    @iWhoToo      int = 0 /* 0 => Just check project; 1 => get list of objs */
as
	-- This procedure should no longer be called;  dt_isundersourcecontrol should be called instead.
	-- Calls are forwarded to dt_isundersourcecontrol to maintain backward compatibility.
	set nocount on
	exec dbo.dt_isundersourcecontrol
		@vchLoginName,
		@vchPassword,
		@iWhoToo 
]]></string>
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<input_param name="@iWhoToo" jt="4" type="int" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_removefromsourcecontrol" id="Procedure_1650" isSystem="false" params_known="y" >
			<string><![CDATA[create procedure dbo.dt_removefromsourcecontrol
as
    set nocount on
    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    exec dbo.dt_droppropertiesbyid @iPropertyObjectId, null
    /* -1 is returned by dt_droppopertiesbyid */
    if @@error <> 0 and @@error <> -1 return 1
    return 0
]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_setpropertybyid" id="Procedure_2516" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	If the property already exists, reset the value; otherwise add property
**		id -- the id in sysobjects of the object
**		property -- the name of the property
**		value -- the text value of the property
**		lvalue -- the binary value of the property (image)
*/
create procedure dbo.dt_setpropertybyid
	@id int,
	@property varchar(64),
	@value varchar(255),
	@lvalue image
as
	set nocount on
	declare @uvalue nvarchar(255) 
	set @uvalue = convert(nvarchar(255), @value) 
	if exists (select * from dbo.dtproperties 
			where objectid=@id and property=@property)
	begin
		--
		-- bump the version count for this row as we update it
		--
		update dbo.dtproperties set value=@value, uvalue=@uvalue, lvalue=@lvalue, version=version+1
			where objectid=@id and property=@property
	end
	else
	begin
		--
		-- version count is auto-set to 0 on initial insert
		--
		insert dbo.dtproperties (property, objectid, value, uvalue, lvalue)
			values (@property, @id, @value, @uvalue, @lvalue)
	end
]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@value" jt="12" type="varchar" />
			<input_param name="@lvalue" jt="2004" type="image" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_setpropertybyid_u" id="Procedure_145e" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	If the property already exists, reset the value; otherwise add property
**		id -- the id in sysobjects of the object
**		property -- the name of the property
**		uvalue -- the text value of the property
**		lvalue -- the binary value of the property (image)
*/
create procedure dbo.dt_setpropertybyid_u
	@id int,
	@property varchar(64),
	@uvalue nvarchar(255),
	@lvalue image
as
	set nocount on
	-- 
	-- If we are writing the name property, find the ansi equivalent. 
	-- If there is no lossless translation, generate an ansi name. 
	-- 
	declare @avalue varchar(255) 
	set @avalue = null 
	if (@uvalue is not null) 
	begin 
		if (convert(nvarchar(255), convert(varchar(255), @uvalue)) = @uvalue) 
		begin 
			set @avalue = convert(varchar(255), @uvalue) 
		end 
		else 
		begin 
			if 'DtgSchemaNAME' = @property 
			begin 
				exec dbo.dt_generateansiname @avalue output 
			end 
		end 
	end 
	if exists (select * from dbo.dtproperties 
			where objectid=@id and property=@property)
	begin
		--
		-- bump the version count for this row as we update it
		--
		update dbo.dtproperties set value=@avalue, uvalue=@uvalue, lvalue=@lvalue, version=version+1
			where objectid=@id and property=@property
	end
	else
	begin
		--
		-- version count is auto-set to 0 on initial insert
		--
		insert dbo.dtproperties (property, objectid, value, uvalue, lvalue)
			values (@property, @id, @avalue, @uvalue, @lvalue)
	end]]></string>
			<input_param name="@id" jt="4" type="int" />
			<input_param name="@property" jt="12" type="varchar" />
			<input_param name="@uvalue" jt="12" type="nvarchar" />
			<input_param name="@lvalue" jt="2004" type="image" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_validateloginparams" id="Procedure_21ba" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_validateloginparams
    @vchLoginName  varchar(255),
    @vchPassword   varchar(255)
as
set nocount on
declare @iReturn int
declare @iObjectId int
select @iObjectId =0
declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'
    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    declare @vchSourceSafeINI varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 GOTO E_OAError
    exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
											'ValidateLoginParams',
											NULL,
											@sSourceSafeINI = @vchSourceSafeINI,
											@sLoginName = @vchLoginName,
											@sPassword = @vchPassword
    if @iReturn <> 0 GOTO E_OAError
CleanUp:
    return
E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
]]></string>
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_validateloginparams_u" id="Procedure_dac" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_validateloginparams_u
    @vchLoginName  nvarchar(255),
    @vchPassword   nvarchar(255)
as
	-- This procedure should no longer be called;  dt_validateloginparams should be called instead.
	-- Calls are forwarded to dt_validateloginparams to maintain backward compatibility.
	set nocount on
	exec dbo.dt_validateloginparams
		@vchLoginName,
		@vchPassword 
]]></string>
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_vcsenabled" id="Procedure_1736" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_vcsenabled
as
set nocount on
declare @iObjectId int
select @iObjectId = 0
declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'
    declare @iReturn int
    exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
    if @iReturn <> 0 raiserror('', 16, -1) /* Can't Load Helper DLLC */
]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_verstamp006" id="Procedure_2515" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	This procedure returns the version number of the stored
**    procedures used by legacy versions of the Microsoft
**	Visual Database Tools.  Version is 7.0.00.
*/
create procedure dbo.dt_verstamp006
as
	select 7000]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_verstamp007" id="Procedure_19da" isSystem="false" params_known="y" >
			<string><![CDATA[/*
**	This procedure returns the version number of the stored
**    procedures used by the the Microsoft Visual Database Tools.
**	Version is 7.0.05.
*/
create procedure dbo.dt_verstamp007
as
	select 7005]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_whocheckedout" id="Procedure_14e6" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_whocheckedout
        @chObjectType  char(4),
        @vchObjectName varchar(255),
        @vchLoginName  varchar(255),
        @vchPassword   varchar(255)
as
set nocount on
declare @iReturn int
declare @iObjectId int
select @iObjectId =0
declare @VSSGUID varchar(100)
select @VSSGUID = 'SQLVersionControl.VCS_SQL'
    declare @iPropertyObjectId int
    select @iPropertyObjectId = (select objectid from dbo.dtproperties where property = 'VCSProjectID')
    declare @vchProjectName   varchar(255)
    declare @vchSourceSafeINI varchar(255)
    declare @vchServerName    varchar(255)
    declare @vchDatabaseName  varchar(255)
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSProject',       @vchProjectName   OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSourceSafeINI', @vchSourceSafeINI OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLServer',     @vchServerName    OUT
    exec dbo.dt_getpropertiesbyid_vcs @iPropertyObjectId, 'VCSSQLDatabase',   @vchDatabaseName  OUT
    if @chObjectType = 'PROC'
    begin
        exec @iReturn = master.dbo.sp_OACreate @VSSGUID, @iObjectId OUT
        if @iReturn <> 0 GOTO E_OAError
        declare @vchReturnValue varchar(255)
        select @vchReturnValue = ''
        exec @iReturn = master.dbo.sp_OAMethod @iObjectId,
												'WhoCheckedOut',
												@vchReturnValue OUT,
												@sProjectName = @vchProjectName,
												@sSourceSafeINI = @vchSourceSafeINI,
												@sObjectName = @vchObjectName,
												@sServerName = @vchServerName,
												@sDatabaseName = @vchDatabaseName,
												@sLoginName = @vchLoginName,
												@sPassword = @vchPassword
        if @iReturn <> 0 GOTO E_OAError
        select @vchReturnValue
    end
CleanUp:
    return
E_OAError:
    exec dbo.dt_displayoaerror @iObjectId, @iReturn
    GOTO CleanUp
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="varchar" />
			<input_param name="@vchLoginName" jt="12" type="varchar" />
			<input_param name="@vchPassword" jt="12" type="varchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="dt_whocheckedout_u" id="Procedure_1a9d" isSystem="false" params_known="y" >
			<string><![CDATA[create proc dbo.dt_whocheckedout_u
        @chObjectType  char(4),
        @vchObjectName nvarchar(255),
        @vchLoginName  nvarchar(255),
        @vchPassword   nvarchar(255)
as
	-- This procedure should no longer be called;  dt_whocheckedout should be called instead.
	-- Calls are forwarded to dt_whocheckedout to maintain backward compatibility.
	set nocount on
	exec dbo.dt_whocheckedout
		@chObjectType, 
		@vchObjectName,
		@vchLoginName, 
		@vchPassword  
]]></string>
			<input_param name="@chObjectType" jt="1" type="char" />
			<input_param name="@vchObjectName" jt="12" type="nvarchar" />
			<input_param name="@vchLoginName" jt="12" type="nvarchar" />
			<input_param name="@vchPassword" jt="12" type="nvarchar" />
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<procedure name="tmpGetDistinctToolLists" id="Procedure_2273" isSystem="false" params_known="y" >
			<string><![CDATA[--///////////////////////////////////////////////////////////////////////////////////
-- Can delete me
--///////////////////////////////////////////////////////////////////////////////////
create PROCEDURE [dbo].[tmpGetDistinctToolLists] 
AS
BEGIN
	select Customer,PartFamily,OperationDescription    
	from bvDistinctToollists
end]]></string>
			<result_param name="@RETURN_VALUE" jt="4" type="int" />
		</procedure>
		<function name="bfCopelandToolBossItemsInPlant" id="Function_984" isSystem="false" params_known="n" >
			<string><![CDATA[create function [dbo].[bfCopelandToolBossItemsInPlant]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
select * from bvCopelandToolBossItemsInPlants
where plant = @plant;]]></string>
		</function>
		<function name="bfGetToolBossJobList" id="Function_243f" isSystem="false" params_known="n" >
			<string><![CDATA[create FUNCTION [dbo].[bfGetToolBossJobList]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
select * from bvToolBossJobList
where plant = @plant
]]></string>
		</function>
		<function name="bfTRXToolBossItemsInPlant" id="Function_1c86" isSystem="false" params_known="n" >
			<string><![CDATA[create function [dbo].[bfTRXToolBossItemsInPlant]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
select * from bvTRXToolBossItemsInPlants
where plant = @plant;]]></string>
		</function>
		<function name="bfToolBossItemsInPlant" id="Function_1c87" isSystem="false" params_known="n" >
			<string><![CDATA[create function [dbo].[bfToolBossItemsInPlant]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
select * from bvToolBossItemsInPlants
where plant = @plant]]></string>
		</function>
		<function name="bfToolListItemsInPlant" id="Function_862" isSystem="false" params_known="n" >
			<string><![CDATA[create function [dbo].[bfToolListItemsInPlant]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
select *
from
bvToolListItemsInPlants
where plant = @plant]]></string>
		</function>
		<function name="bfToolListsInPlant" id="Function_1782" isSystem="false" params_known="n" >
			<string><![CDATA[create FUNCTION [dbo].[bfToolListsInPlant]
(  
 @plant int
)
RETURNS TABLE 
AS
RETURN
	select * from bvToolListsInPlants
	where plant = @plant]]></string>
		</function>
	</schema>
	<connector name="SqlServer" database="SqlServer" driver_class="net.sourceforge.jtds.jdbc.Driver" driver_jar="jtds-1.3.1.jar" driver_desc="SQL Server Authentication" host="busche-sql" port="1433" instance="busche toollist" user="sa" passwd="YnVzY2hlY25jMQ==" />
	<layout name="Layout with Tools" id="Layout_b6e" show_column_type="y" show_relation="columns" >
		<entity schema="Busche ToolList.dbo" name="ActiveToolLists" color="BED3F4" x="3680" y="848" />
		<entity schema="Busche ToolList.dbo" name="EdonLocation" color="BED3F4" x="4752" y="848" />
		<entity schema="Busche ToolList.dbo" name="INVENT" color="BED3F4" x="4752" y="1104" />
		<entity schema="Busche ToolList.dbo" name="NotifyMe" color="BED3F4" x="4736" y="1392" />
		<entity schema="Busche ToolList.dbo" name="PlexMasterToolList" color="BEBEF4" x="2688" y="2352" />
		<entity schema="Busche ToolList.dbo" name="PlexMasterToolListBak" color="BEBEF4" x="3072" y="2352" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM" color="C7F4BE" x="4208" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910" color="C7F4BE" x="4880" y="4208" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910B" color="C7F4BE" x="4544" y="4208" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM1023" color="C7F4BE" x="4544" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMAvilla" color="C7F4BE" x="4208" y="4528" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6" color="C7F4BE" x="4544" y="4528" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6_6K_Knuckles_Horz" color="BED3F4" x="2512" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant8" color="C7F4BE" x="4208" y="4208" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssembly" color="BEBEF4" x="3072" y="3136" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate" color="BEBEF4" x="3408" y="3136" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate0910" color="BEBEF4" x="3408" y="3488" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplateAvilla" color="BEBEF4" x="3792" y="3136" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6" color="BED3F4" x="3280" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6_6K_Knuckles_Wip" color="BED3F4" x="3664" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant8" color="BED3F4" x="2896" y="3888" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant9" color="BED3F4" x="3664" y="4256" />
		<entity schema="Busche ToolList.dbo" name="Plex_PN_Op_Map_Edon" color="BED3F4" x="4400" y="1392" />
		<entity schema="Busche ToolList.dbo" name="PlxPartNumber" color="BED3F4" x="4112" y="1392" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Map" color="BED3F4" x="4400" y="368" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map" color="C7F4BE" x="1312" y="2352" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Albion" color="C7F4BE" x="1648" y="2352" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Avilla" color="C7F4BE" x="1984" y="2352" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant6" color="C7F4BE" x="2320" y="2576" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant8" color="C7F4BE" x="2320" y="2848" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant9" color="C7F4BE" x="1984" y="2576" />
		<entity schema="Busche ToolList.dbo" name="TestImage" color="BED3F4" x="4800" y="560" />
		<entity schema="Busche ToolList.dbo" name="ToolBoss" color="BED3F4" x="3648" y="1520" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Action Text" color="BED3F4" x="3952" y="1696" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Actions" color="BEBEF4" x="1024" y="2080" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Disposition" color="BEBEF4" x="368" y="1568" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Items" color="BEBEF4" x="688" y="1728" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Master" color="BEBEF4" x="1024" y="1728" />
		<entity schema="Busche ToolList.dbo" name="ToolList Email" color="F4DDBE" x="1984" y="752" />
		<entity schema="Busche ToolList.dbo" name="ToolList Fixture" color="F4DDBE" x="1984" y="992" />
		<entity schema="Busche ToolList.dbo" name="ToolList Item" color="D1BEF4" x="2304" y="1856" />
		<entity schema="Busche ToolList.dbo" name="ToolList Master" color="F4DDBE" x="1584" y="944" />
		<entity schema="Busche ToolList.dbo" name="ToolList Misc" color="F4DDBE" x="1984" y="1296" />
		<entity schema="Busche ToolList.dbo" name="ToolList PartNumbers" color="D1BEF4" x="1376" y="1680" />
		<entity schema="Busche ToolList.dbo" name="ToolList Plant" color="D1BEF4" x="1696" y="1680" />
		<entity schema="Busche ToolList.dbo" name="ToolList Plant List" color="D1BEF4" x="1920" y="1680" />
		<entity schema="Busche ToolList.dbo" name="ToolList Rev" color="D1BEF4" x="1920" y="1856" />
		<entity schema="Busche ToolList.dbo" name="ToolList Tool" color="BEBEF4" x="688" y="1376" />
		<entity schema="Busche ToolList.dbo" name="ToolList ToolPartNumber" color="BEBEF4" x="368" y="1376" />
		<entity schema="Busche ToolList.dbo" name="ToolList Toolboss Stock Items" color="BEBEF4" x="48" y="1376" />
		<entity schema="Busche ToolList.dbo" name="ToolList Users" color="F4DDBE" x="1696" y="752" />
		<entity schema="Busche ToolList.dbo" name="ToolList Version" color="F4DDBE" x="1584" y="1296" />
		<entity schema="Busche ToolList.dbo" name="ToolListAssembly" color="D1BEF4" x="1920" y="2096" />
		<entity schema="Busche ToolList.dbo" name="ToolListItems" color="F4DDBE" x="1376" y="720" />
		<entity schema="Busche ToolList.dbo" name="VMonthlyUsage" color="BED3F4" x="2944" y="1744" />
		<entity schema="Busche ToolList.dbo" name="VObsMonthlyUsage" color="BED3F4" x="2944" y="1472" />
		<entity schema="Busche ToolList.dbo" name="VTBMonthlyUsage" color="BED3F4" x="3296" y="1328" />
		<entity schema="Busche ToolList.dbo" name="btDistinctToolLists" color="BED3F4" x="4000" y="848" />
		<entity schema="Busche ToolList.dbo" name="btDistinctToolLists010921" color="BED3F4" x="3296" y="2032" />
		<entity schema="Busche ToolList.dbo" name="btItemsPerPart" color="BED3F4" x="3664" y="1040" />
		<entity schema="Busche ToolList.dbo" name="btJobNumbersIn9B" color="BED3F4" x="3392" y="880" />
		<entity schema="Busche ToolList.dbo" name="btJobsIn9B" color="BED3F4" x="2688" y="736" />
		<entity schema="Busche ToolList.dbo" name="btObsToolListItems" color="BED3F4" x="3360" y="672" />
		<entity schema="Busche ToolList.dbo" name="btToolBoss9BRestrictions" color="BED3F4" x="3680" y="592" />
		<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant11" color="BED3F4" x="5152" y="224" />
		<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant12" color="BED3F4" x="5152" y="384" />
		<entity schema="Busche ToolList.dbo" name="btToolListItems" color="BED3F4" x="5152" y="48" />
		<entity schema="Busche ToolList.dbo" name="btToolListItemsInPlant12" color="BED3F4" x="5472" y="48" />
		<entity schema="Busche ToolList.dbo" name="btToolListPartItems" color="BED3F4" x="5472" y="224" />
		<entity schema="Busche ToolList.dbo" name="bvAllTListsForPN" color="BED3F4" x="4000" y="672" />
		<entity schema="Busche ToolList.dbo" name="bvCopelandToolBossItemsInPlants" color="BED3F4" x="4400" y="848" />
		<entity schema="Busche ToolList.dbo" name="bvCopelandToolListItemsInPlants" color="BED3F4" x="3632" y="48" />
		<entity schema="Busche ToolList.dbo" name="bvDistinctToolListItems" color="BED3F4" x="4400" y="1120" />
		<entity schema="Busche ToolList.dbo" name="bvDistinctToolLists" color="BED3F4" x="2896" y="2032" />
		<entity schema="Busche ToolList.dbo" name="bvGetActiveToolLists" color="BED3F4" x="4000" y="1120" />
		<entity schema="Busche ToolList.dbo" name="bvGetToolListsMultiPn" color="BED3F4" x="2736" y="1136" />
		<entity schema="Busche ToolList.dbo" name="bvListOfActiveApprovedToolLists" color="BED3F4" x="4400" y="560" />
		<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv1" color="BED3F4" x="3648" y="1248" />
		<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv2" color="BED3F4" x="3984" y="144" />
		<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv1" color="BED3F4" x="3040" y="1040" />
		<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv2" color="D1BEF4" x="5504" y="2112" />
		<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv1" color="D1BEF4" x="5152" y="1776" />
		<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv2" color="D1BEF4" x="5504" y="1776" />
		<entity schema="Busche ToolList.dbo" name="bvTRXToolBossItemsInPlants" color="BED3F4" x="3360" y="416" />
		<entity schema="Busche ToolList.dbo" name="bvTRXToolListItemsInPlants" color="BED3F4" x="3008" y="128" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossItemsInPlants" color="BED3F4" x="3056" y="592" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossItemsWithProcessId" color="C7F4BE" x="5456" y="2656" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossJobList" color="C7F4BE" x="5456" y="2352" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossRestrictions2" color="C7F4BE" x="5152" y="2656" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsFixtureOnlyLv1" color="F4DDBE" x="6592" y="2560" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlants" color="F4DDBE" x="6944" y="2560" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlantsNew" color="F4DDBE" x="7296" y="2848" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv1" color="C7F4BE" x="5808" y="2352" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2" color="C7F4BE" x="6160" y="2352" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byItem" color="F4DDBE" x="6944" y="2352" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byPart" color="F4DDBE" x="7296" y="2560" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv3byPart" color="F4DDBE" x="7632" y="2560" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsMiscOnlyLv1" color="C7F4BE" x="6160" y="2928" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsOnlyLv1" color="C7F4BE" x="5808" y="2928" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsAssignedPN" color="C7F4BE" x="6160" y="2624" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsInPlants" color="C7F4BE" x="5408" y="2928" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsMultiPn" color="F4DDBE" x="6944" y="2848" />
		<entity schema="Busche ToolList.dbo" name="cncstate" color="BED3F4" x="3680" y="368" />
		<entity schema="Busche ToolList.dbo" name="dtproperties" color="BED3F4" x="3984" y="336" />
		<entity schema="Busche ToolList.dbo" name="tmpTooListItemsAvilla" color="BED3F4" x="4800" y="384" />
		<entity schema="Busche ToolList.dbo" name="toolitems" color="BED3F4" x="3296" y="1520" />
		<entity schema="Busche ToolList.dbo" name="toolitems010921" color="BED3F4" x="3696" y="2032" />
		<entity schema="Busche ToolList.dbo" name="toollists" color="BED3F4" x="3296" y="1744" />
		<script name="Sample SQL Editor" id="Editor_10d8" language="SQL" >
			<string><![CDATA[SELECT ProcessID, PartNumber, Description
FROM
	[Busche ToolList].dbo.ActiveToolLists s;
GO]]></string>
		</script>
		<browser id="Browse_13e6" name="Sample Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="Busche ToolList.dbo" entity="ActiveToolLists" x="20" y="20" width="400" height="300" />
		</browser>
		<query id="Query_1839" name="Sample Query Builder" >
			<query_table schema="Busche ToolList.dbo" name="ActiveToolLists" alias="a" x="48" y="48" >
				<column name="ProcessID" />
				<column name="PartNumber" />
				<column name="Description" />
			</query_table>
		</query>
		<form name="Sample Report" id="Report_2099" template="Page" css="container-fluid" view="frame" >
			<var name="samplePageNumber" type="4" value="0" mandatory="n" />
			<var name="sampleRecordsPerPage" type="4" value="100" mandatory="n" />
			<body name="Body" template="Grid" pos="0,0,0,0,f,f" layout="{{-2,-2,-2,-2,-1},{-2,-2,-2}}" scroll="n" html="n" >
				<cell type="label" name="sample" template="H3" pos="0,0,1,0,l,c" />
				<tableview name="sample" template="Table" css="table table-striped table-bordered table-sm table-hover" pos="0,1,4,1,f,f" layout="{{-2,-2,-2},{-2,-2}}" scroll="n" html="n" header_rows="1" >
					<form_script type="DataSource" language="SQL" >
						<var name="ProcessID" type="4" />
						<var name="PartNumber" />
						<var name="Description" />
						<script ><![CDATA[SELECT * FROM [Busche ToolList].dbo.ActiveToolLists]]></script>
					</form_script>
					<cell type="label" name="ProcessID" pos="0,0,0,0,c,c" />
					<cell type="label" name="PartNumber" pos="1,0,1,0,c,c" />
					<cell type="label" name="Description" pos="2,0,2,0,c,c" />
					<cell type="label" name="${ProcessID}" template="Plain" pos="0,1,0,1,l,c" />
					<cell type="label" name="${PartNumber}" template="Plain" pos="1,1,1,1,l,c" />
					<cell type="label" name="${Description}" template="Plain" pos="2,1,2,1,l,c" />
				</tableview>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="0,2,0,2,l,c" glyph="FA-ANGLE_DOUBLE_LEFT" ref_id="Report_2099" >
					<var name="samplePageNumber" value="0" />
				</cell>
				<cell type="href" name="" disabled="${samplePageNumber&lt;1}" pos="1,2,1,2,l,c" glyph="FA-ANGLE_LEFT" ref_id="Report_2099" >
					<var name="samplePageNumber" value="${Math.max(0,samplePageNumber-1)}" />
				</cell>
				<cell type="label" name="Page ${samplePageNumber+1}" pos="2,2,2,2,l,c" />
				<cell type="href" name="" disabled="${!sampleHasNextPage}" pos="3,2,3,2,l,c" glyph="FA-ANGLE_RIGHT" ref_id="Report_2099" >
					<var name="samplePageNumber" value="${( samplePageNumber+1 )}" />
				</cell>
			</body>
		</form>
	</layout>
	<layout name="Main Layout" id="Layout_147a" show_relation="columns" >
		<entity schema="Busche ToolList.dbo" name="ActiveToolLists" color="BED3F4" x="3200" y="880" />
		<entity schema="Busche ToolList.dbo" name="EdonLocation" color="BED3F4" x="3952" y="880" />
		<entity schema="Busche ToolList.dbo" name="INVENT" color="BED3F4" x="4064" y="1152" />
		<entity schema="Busche ToolList.dbo" name="NotifyMe" color="BED3F4" x="4064" y="1408" />
		<entity schema="Busche ToolList.dbo" name="PlexMasterToolList" color="BEBEF4" x="2368" y="2400" />
		<entity schema="Busche ToolList.dbo" name="PlexMasterToolListBak" color="BEBEF4" x="2672" y="2400" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM" color="C7F4BE" x="3680" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910" color="C7F4BE" x="4192" y="4256" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910B" color="C7F4BE" x="3936" y="4256" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOM1023" color="C7F4BE" x="3936" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMAvilla" color="C7F4BE" x="3680" y="4576" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6" color="C7F4BE" x="3936" y="4576" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6_6K_Knuckles_Horz" color="BED3F4" x="1984" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant8" color="C7F4BE" x="3680" y="4256" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssembly" color="BEBEF4" x="2672" y="3184" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate" color="BEBEF4" x="2944" y="3184" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate0910" color="BEBEF4" x="2912" y="3536" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplateAvilla" color="BEBEF4" x="3280" y="3184" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6" color="BED3F4" x="2752" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6_6K_Knuckles_Wip" color="BED3F4" x="3136" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant8" color="BED3F4" x="2368" y="3936" />
		<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant9" color="BED3F4" x="3136" y="4304" />
		<entity schema="Busche ToolList.dbo" name="Plex_PN_Op_Map_Edon" color="BED3F4" x="3712" y="1408" />
		<entity schema="Busche ToolList.dbo" name="PlxPartNumber" color="BED3F4" x="3424" y="1424" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Map" color="BED3F4" x="3712" y="496" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map" color="C7F4BE" x="1136" y="2400" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Albion" color="C7F4BE" x="1392" y="2400" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Avilla" color="C7F4BE" x="1696" y="2400" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant6" color="C7F4BE" x="2016" y="2624" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant8" color="C7F4BE" x="2016" y="2896" />
		<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant9" color="C7F4BE" x="1696" y="2624" />
		<entity schema="Busche ToolList.dbo" name="TestImage" color="BED3F4" x="3984" y="688" />
		<entity schema="Busche ToolList.dbo" name="ToolBoss" color="BED3F4" x="3072" y="1568" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Action Text" color="BED3F4" x="3312" y="1744" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Actions" color="BEBEF4" x="928" y="2128" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Disposition" color="BEBEF4" x="336" y="1616" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Items" color="BEBEF4" x="656" y="1776" />
		<entity schema="Busche ToolList.dbo" name="ToolList Change Master" color="BEBEF4" x="928" y="1776" />
		<entity schema="Busche ToolList.dbo" name="ToolList Email" color="F4DDBE" x="1712" y="800" />
		<entity schema="Busche ToolList.dbo" name="ToolList Fixture" color="F4DDBE" x="1712" y="1040" />
		<entity schema="Busche ToolList.dbo" name="ToolList Item" color="D1BEF4" x="2016" y="1904" />
		<entity schema="Busche ToolList.dbo" name="ToolList Master" color="F4DDBE" x="1424" y="992" />
		<entity schema="Busche ToolList.dbo" name="ToolList Misc" color="F4DDBE" x="1712" y="1344" />
		<entity schema="Busche ToolList.dbo" name="ToolList PartNumbers" color="D1BEF4" x="1248" y="1728" />
		<entity schema="Busche ToolList.dbo" name="ToolList Plant" color="D1BEF4" x="1520" y="1728" />
		<entity schema="Busche ToolList.dbo" name="ToolList Plant List" color="D1BEF4" x="1728" y="1728" />
		<entity schema="Busche ToolList.dbo" name="ToolList Rev" color="D1BEF4" x="1728" y="1904" />
		<entity schema="Busche ToolList.dbo" name="ToolList Tool" color="BEBEF4" x="656" y="1424" />
		<entity schema="Busche ToolList.dbo" name="ToolList ToolPartNumber" color="BEBEF4" x="368" y="1424" />
		<entity schema="Busche ToolList.dbo" name="ToolList Toolboss Stock Items" color="BEBEF4" x="48" y="1424" />
		<entity schema="Busche ToolList.dbo" name="ToolList Users" color="F4DDBE" x="1504" y="800" />
		<entity schema="Busche ToolList.dbo" name="ToolList Version" color="F4DDBE" x="1424" y="1344" />
		<entity schema="Busche ToolList.dbo" name="ToolListAssembly" color="D1BEF4" x="1728" y="2144" />
		<entity schema="Busche ToolList.dbo" name="ToolListItems" color="F4DDBE" x="1248" y="768" />
		<entity schema="Busche ToolList.dbo" name="VMonthlyUsage" color="BED3F4" x="2560" y="1792" />
		<entity schema="Busche ToolList.dbo" name="VObsMonthlyUsage" color="BED3F4" x="2544" y="1520" />
		<entity schema="Busche ToolList.dbo" name="VTBMonthlyUsage" color="BED3F4" x="2800" y="1376" />
		<entity schema="Busche ToolList.dbo" name="btDistinctToolLists" color="BED3F4" x="3424" y="880" />
		<entity schema="Busche ToolList.dbo" name="btDistinctToolLists010921" color="BED3F4" x="2784" y="2080" />
		<entity schema="Busche ToolList.dbo" name="btItemsPerPart" color="BED3F4" x="3184" y="1072" />
		<entity schema="Busche ToolList.dbo" name="btJobNumbersIn9B" color="BED3F4" x="2944" y="912" />
		<entity schema="Busche ToolList.dbo" name="btJobsIn9B" color="BED3F4" x="2368" y="768" />
		<entity schema="Busche ToolList.dbo" name="btObsToolListItems" color="BED3F4" x="2944" y="704" />
		<entity schema="Busche ToolList.dbo" name="btToolBoss9BRestrictions" color="BED3F4" x="3200" y="624" />
		<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant11" color="BED3F4" x="4416" y="256" />
		<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant12" color="BED3F4" x="4416" y="416" />
		<entity schema="Busche ToolList.dbo" name="btToolListItems" color="BED3F4" x="4496" y="80" />
		<entity schema="Busche ToolList.dbo" name="btToolListItemsInPlant12" color="BED3F4" x="4720" y="80" />
		<entity schema="Busche ToolList.dbo" name="btToolListPartItems" color="BED3F4" x="4720" y="256" />
		<entity schema="Busche ToolList.dbo" name="bvAllTListsForPN" color="BED3F4" x="3712" y="880" />
		<entity schema="Busche ToolList.dbo" name="bvCopelandToolBossItemsInPlants" color="BED3F4" x="3712" y="1152" />
		<entity schema="Busche ToolList.dbo" name="bvCopelandToolListItemsInPlants" color="BED3F4" x="3200" y="80" />
		<entity schema="Busche ToolList.dbo" name="bvDistinctToolListItems" color="BED3F4" x="3424" y="1152" />
		<entity schema="Busche ToolList.dbo" name="bvDistinctToolLists" color="BED3F4" x="2368" y="1072" />
		<entity schema="Busche ToolList.dbo" name="bvGetActiveToolLists" color="BED3F4" x="3712" y="688" />
		<entity schema="Busche ToolList.dbo" name="bvGetToolListsMultiPn" color="BED3F4" x="2416" y="1344" />
		<entity schema="Busche ToolList.dbo" name="bvListOfActiveApprovedToolLists" color="BED3F4" x="3072" y="1280" />
		<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv1" color="BED3F4" x="2688" y="1072" />
		<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv2" color="BED3F4" x="2400" y="512" />
		<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv1" color="BED3F4" x="2656" y="800" />
		<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv2" color="D1BEF4" x="4704" y="2160" />
		<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv1" color="D1BEF4" x="4416" y="1824" />
		<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv2" color="D1BEF4" x="4704" y="1824" />
		<entity schema="Busche ToolList.dbo" name="bvTRXToolBossItemsInPlants" color="BED3F4" x="3200" y="368" />
		<entity schema="Busche ToolList.dbo" name="bvTRXToolListItemsInPlants" color="BED3F4" x="2896" y="80" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossItemsInPlants" color="BED3F4" x="2656" y="448" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossItemsWithProcessId" color="C7F4BE" x="4656" y="2704" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossJobList" color="C7F4BE" x="4704" y="2400" />
		<entity schema="Busche ToolList.dbo" name="bvToolBossRestrictions2" color="C7F4BE" x="4416" y="2432" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsFixtureOnlyLv1" color="F4DDBE" x="5664" y="2608" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlants" color="F4DDBE" x="6000" y="2608" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlantsNew" color="F4DDBE" x="6288" y="2896" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv1" color="C7F4BE" x="4992" y="2400" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2" color="C7F4BE" x="5312" y="2400" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byItem" color="F4DDBE" x="5984" y="2400" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byPart" color="F4DDBE" x="6288" y="2608" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv3byPart" color="F4DDBE" x="6592" y="2608" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsMiscOnlyLv1" color="C7F4BE" x="5312" y="2976" />
		<entity schema="Busche ToolList.dbo" name="bvToolListItemsOnlyLv1" color="C7F4BE" x="4992" y="2976" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsAssignedPN" color="C7F4BE" x="5312" y="2672" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsInPlants" color="C7F4BE" x="4704" y="2976" />
		<entity schema="Busche ToolList.dbo" name="bvToolListsMultiPn" color="F4DDBE" x="6000" y="2896" />
		<entity schema="Busche ToolList.dbo" name="cncstate" color="BED3F4" x="3488" y="624" />
		<entity schema="Busche ToolList.dbo" name="dtproperties" color="BED3F4" x="2992" y="368" />
		<entity schema="Busche ToolList.dbo" name="tmpTooListItemsAvilla" color="BED3F4" x="3984" y="512" />
		<entity schema="Busche ToolList.dbo" name="toolitems" color="BED3F4" x="2800" y="1568" />
		<entity schema="Busche ToolList.dbo" name="toolitems010921" color="BED3F4" x="3088" y="2080" />
		<entity schema="Busche ToolList.dbo" name="toollists" color="BED3F4" x="2800" y="1792" />
		<callout x="3200" y="768" pointer="Round" >
			<comment><![CDATA[Double-click table headers, columns, or foreign keys to edit. 
Create multiple layouts (diagrams) with the same or different tables. 
Saving the model to file will also save the layouts.]]></comment>
		</callout>
		<group name="ActiveToolLists" color="ECF0F7" >
			<entity schema="Busche ToolList.dbo" name="ActiveToolLists" />
			<entity schema="Busche ToolList.dbo" name="btDistinctToolLists" />
			<entity schema="Busche ToolList.dbo" name="btItemsPerPart" />
			<entity schema="Busche ToolList.dbo" name="btJobNumbersIn9B" />
			<entity schema="Busche ToolList.dbo" name="btObsToolListItems" />
			<entity schema="Busche ToolList.dbo" name="btToolBoss9BRestrictions" />
			<entity schema="Busche ToolList.dbo" name="bvAllTListsForPN" />
			<entity schema="Busche ToolList.dbo" name="bvCopelandToolBossItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="bvDistinctToolListItems" />
			<entity schema="Busche ToolList.dbo" name="bvGetActiveToolLists" />
			<entity schema="Busche ToolList.dbo" name="bvListOfActiveApprovedToolLists" />
			<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv1" />
			<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv1" />
			<entity schema="Busche ToolList.dbo" name="bvToolBossItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="bvTRXToolBossItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="cncstate" />
			<entity schema="Busche ToolList.dbo" name="dtproperties" />
			<entity schema="Busche ToolList.dbo" name="EdonLocation" />
			<entity schema="Busche ToolList.dbo" name="INVENT" />
			<entity schema="Busche ToolList.dbo" name="NotifyMe" />
			<entity schema="Busche ToolList.dbo" name="Plex_PN_Op_Map_Edon" />
			<entity schema="Busche ToolList.dbo" name="PlxPartNumber" />
			<entity schema="Busche ToolList.dbo" name="TestImage" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Map" />
			<entity schema="Busche ToolList.dbo" name="tmpTooListItemsAvilla" />
			<entity schema="Busche ToolList.dbo" name="ToolBoss" />
			<entity schema="Busche ToolList.dbo" name="toolitems" />
			<entity schema="Busche ToolList.dbo" name="ToolList Change Action Text" />
			<entity schema="Busche ToolList.dbo" name="toollists" />
			<entity schema="Busche ToolList.dbo" name="VMonthlyUsage" />
			<entity schema="Busche ToolList.dbo" name="VObsMonthlyUsage" />
			<entity schema="Busche ToolList.dbo" name="VTBMonthlyUsage" />
			<entity schema="Busche ToolList.dbo" name="bvGetToolListsMultiPn" />
			<entity schema="Busche ToolList.dbo" name="btJobsIn9B" />
			<entity schema="Busche ToolList.dbo" name="bvTRXToolListItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="bvCopelandToolListItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="toolitems010921" />
			<entity schema="Busche ToolList.dbo" name="btDistinctToolLists010921" />
			<entity schema="Busche ToolList.dbo" name="bvDistinctToolLists" />
			<entity schema="Busche ToolList.dbo" name="bvMonthlyUsageLv2" />
		</group>
		<group name="btToolListItems" color="ECF0F7" >
			<entity schema="Busche ToolList.dbo" name="btToolListItems" />
			<entity schema="Busche ToolList.dbo" name="btToolListItemsInPlant12" />
			<entity schema="Busche ToolList.dbo" name="btToolListPartItems" />
			<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant11" />
			<entity schema="Busche ToolList.dbo" name="btToolBossItemsInPlant12" />
		</group>
		<group name="bvObsToolListItemsLv1" color="F0ECF7" >
			<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv1" />
			<entity schema="Busche ToolList.dbo" name="bvObsToolListItemsLv2" />
			<entity schema="Busche ToolList.dbo" name="bvObsMonthlyUsageLv2" />
		</group>
		<group name="bvToolBossJobList" color="EEF7EC" >
			<entity schema="Busche ToolList.dbo" name="bvToolBossJobList" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv1" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2" />
			<entity schema="Busche ToolList.dbo" name="bvToolBossItemsWithProcessId" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsMiscOnlyLv1" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsOnlyLv1" />
			<entity schema="Busche ToolList.dbo" name="bvToolBossRestrictions2" />
			<entity schema="Busche ToolList.dbo" name="bvToolListsAssignedPN" />
			<entity schema="Busche ToolList.dbo" name="bvToolListsInPlants" />
		</group>
		<group name="PlexMasterToolList" color="ECECF7" >
			<entity schema="Busche ToolList.dbo" name="PlexMasterToolList" />
			<entity schema="Busche ToolList.dbo" name="PlexMasterToolListBak" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssembly" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplateAvilla" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplate0910" />
		</group>
		<group name="TL_Plex_PN_Op_Map" color="EEF7EC" >
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Albion" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Avilla" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant9" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant6" />
			<entity schema="Busche ToolList.dbo" name="TL_Plex_PN_Op_Map_Plant8" />
		</group>
		<group name="ToolList PartNumbers" color="F0ECF7" >
			<entity schema="Busche ToolList.dbo" name="ToolList PartNumbers" />
			<entity schema="Busche ToolList.dbo" name="ToolList Plant" />
			<entity schema="Busche ToolList.dbo" name="ToolList Plant List" />
			<entity schema="Busche ToolList.dbo" name="ToolList Rev" />
			<entity schema="Busche ToolList.dbo" name="ToolList Item" />
			<entity schema="Busche ToolList.dbo" name="ToolListAssembly" />
		</group>
		<group name="bvToolListItemsFixtureOnlyLv1" color="F7F2EC" >
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsFixtureOnlyLv1" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlants" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byPart" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsInPlantsNew" />
			<entity schema="Busche ToolList.dbo" name="bvToolListsMultiPn" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv3byPart" />
			<entity schema="Busche ToolList.dbo" name="bvToolListItemsLv2byItem" />
		</group>
		<group name="PlexToolBOM" color="EEF7EC" >
			<entity schema="Busche ToolList.dbo" name="PlexToolBOM" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOM1023" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910B" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant8" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOMAvilla" />
			<entity schema="Busche ToolList.dbo" name="PlexToolBOM0910" />
		</group>
		<group name="ToolList Toolboss Stock Items" color="ECECF7" >
			<entity schema="Busche ToolList.dbo" name="ToolList Toolboss Stock Items" />
			<entity schema="Busche ToolList.dbo" name="ToolList ToolPartNumber" />
			<entity schema="Busche ToolList.dbo" name="ToolList Tool" />
			<entity schema="Busche ToolList.dbo" name="ToolList Change Disposition" />
			<entity schema="Busche ToolList.dbo" name="ToolList Change Items" />
			<entity schema="Busche ToolList.dbo" name="ToolList Change Master" />
			<entity schema="Busche ToolList.dbo" name="ToolList Change Actions" />
		</group>
		<group name="ToolList Users" color="F7F2EC" >
			<entity schema="Busche ToolList.dbo" name="ToolList Users" />
			<entity schema="Busche ToolList.dbo" name="ToolList Email" />
			<entity schema="Busche ToolList.dbo" name="ToolList Master" />
			<entity schema="Busche ToolList.dbo" name="ToolListItems" />
			<entity schema="Busche ToolList.dbo" name="ToolList Misc" />
			<entity schema="Busche ToolList.dbo" name="ToolList Fixture" />
			<entity schema="Busche ToolList.dbo" name="ToolList Version" />
		</group>
		<group name="PlexToolBOMPlant6_6K_Knuckles_Horz" color="ECF0F7" >
			<entity schema="Busche ToolList.dbo" name="PlexToolBOMPlant6_6K_Knuckles_Horz" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant8" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant6_6K_Knuckles_Wip" />
			<entity schema="Busche ToolList.dbo" name="PlexToolListAssemblyTemplatePlant9" />
		</group>
	</layout>
</project>